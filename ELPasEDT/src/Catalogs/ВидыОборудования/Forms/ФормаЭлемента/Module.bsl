
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.УправлениеДоступом
	//УправлениеДоступом.ПриСозданииФормыЗначенияДоступа(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	//ВИ++
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	//ВИ--
	
	//ВИ++
	//Заявки
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Статус = Перечисления.СтатусыЗаявок.НаРассмотрении;
		Объект.Автор = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	//ВИ--
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Элементы.ГруппаЗаявки.Видимость = ОтображатьГруппуЗаявок();
	Элементы.СсылкаДляИзменения.Видимость = ЗначениеЗаполнено(Объект.СсылкаДляИзменения) И ОтображатьГруппуЗаявок();
	Элементы.ФормаИзменить.Видимость = Не Объект.Ссылка.Пустая() И (Не ЗначениеЗаполнено(Объект.Статус) ИЛИ Объект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыЗаявок.Утверждена"));
	Элементы.Статус.Доступность = Не Объект.Ссылка.Пустая();
	Элементы.СсылкаДляИзменения.ТолькоПросмотр = Истина;
	
КонецПроцедуры

&НаСервере
Функция ОтображатьГруппуЗаявок()
	
	Возврат Объект.Статус = Перечисления.СтатусыЗаявок.НаРассмотрении ИЛИ Объект.Статус = Перечисления.СтатусыЗаявок.СогласованаПлощадкой
	        ИЛИ Объект.Статус = Перечисления.СтатусыЗаявок.Согласована;
	
КонецФункции

&НаКлиенте
Процедура СтатусПриИзменении(Элемент)
	
	Если Объект.Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Статус) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПроверкаСтатусаУспешно() Тогда
		ПоказатьПредупреждение(, "Можно утвердить только согласованные заявки!");
	КонецЕсли;   	   
	
КонецПроцедуры

&НаСервере
Функция ПроверкаСтатусаУспешно()
	
	Если Объект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыЗаявок.Утверждена") И Не Объект.Ссылка.Статус = ПредопределенноеЗначение("Перечисление.СтатусыЗаявок.Согласована") Тогда
		Объект.Статус = Объект.Ссылка.Статус;
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура Изменить(Команда)
	
	ЭтаФорма.Закрыть();	
	//НовЭлемент = СоздатьОбъектСервер(); 	
	//ОткрытьФорму("Справочник.ВидыОборудования.Форма.ФормаЭлемента", Новый Структура("Ключ",НовЭлемент));
	ДанныеЗаполнения = Новый Структура();
	
	ДанныеЗаполнения.Вставить("Наименование", Объект.Наименование);
	ДанныеЗаполнения.Вставить("КодSAP", Объект.КодSAP);
	ДанныеЗаполнения.Вставить("Комментарий", Объект.Комментарий);
	ДанныеЗаполнения.Вставить("Статус", Объект.Статус);
	ДанныеЗаполнения.Вставить("СсылкаДляИзменения", Объект.Ссылка);
	ДанныеЗаполнения.Вставить("ЗаполнениеПоКоманде", Истина);
	// ( t+ ФА 31.01.2018
	ДанныеЗаполнения.Вставить("Категория", Объект.Категория);
	ДанныеЗаполнения.Вставить("Родитель", Объект.Родитель);
	// ) t+ ФА
	Массив = Новый Массив;  	
	Для Каждого ТекСтр Из Объект.РеквизитыПаспорта Цикл
		НС = новый Структура("Реквизит, Заголовок");
        ЗаполнитьЗначенияСвойств(НС, ТекСтр);
        Массив.Добавить(НС);
    КонецЦикла;    
    ДанныеЗаполнения.Вставить("ТЧ", Массив);
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ДанныеЗаполнения);
	
	ОткрытьФорму("Справочник.ВидыОборудования.Форма.ФормаЭлемента", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Функция СоздатьОбъектСервер()
	
	НовыйОбъект = Справочники.ВидыОборудования.СоздатьЭлемент();
	
	НовыйОбъект.Наименование = Объект.Наименование;
	НовыйОбъект.КодSAP = Объект.КодSAP;
	НовыйОбъект.Комментарий = Объект.Комментарий;
	НовыйОбъект.Статус = Перечисления.СтатусыЗаявок.НаРассмотрении;
	НовыйОбъект.СсылкаДляИзменения = Объект.Ссылка;
	
	Для Каждого ТекСтр Из Объект.РеквизитыПаспорта Цикл
		НовСтр = НовыйОбъект.РеквизитыПаспорта.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, ТекСтр);
	КонецЦикла;
	
	Попытка
		НовыйОбъект.Записать();
	Исключение
	КонецПопытки;
	
	Возврат	НовыйОбъект.Ссылка;  	
	
КонецФункции

&НаСервере
Процедура ИзменениеСсылкиСервер()
	
	Объект.Наименование = Объект.СсылкаДляИзменения.Наименование;
	Объект.КодSAP = Объект.СсылкаДляИзменения.КодSAP;
	Объект.Комментарий = Объект.СсылкаДляИзменения.Комментарий;
	
	Объект.РеквизитыПаспорта.Очистить();
	Для Каждого ТекСтр Из Объект.СсылкаДляИзменения.РеквизитыПаспорта Цикл
		НовСтр = Объект.РеквизитыПаспорта.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, ТекСтр);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	// Проверка на одинаковые реквизиты
	
	Отбор = Новый Структура("Реквизит");
	
	Для Каждого СтрРекв Из Объект.РеквизитыПаспорта Цикл
		
		Отбор.Реквизит = СтрРекв.Реквизит;
		Найденные = Объект.РеквизитыПаспорта.НайтиСтроки(Отбор);
		
		Если Найденные.Количество() > 1 Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("В таблице реквизитов имеются дубли: %1", СтрРекв.Реквизит);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Объект.РеквизитыПаспорта[%1].Реквизит", Формат(СтрРекв.НомерСтроки - 1, "ЧГ=0")),, Отказ);
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти