
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВыполнятьОтбор = Истина;
	
	Если Параметры.ФиксированныеНастройки <> Неопределено Тогда
		
		ЗначениеОтбора = УстановитьОтборПодразделенийПоЭлементамОтбора(Параметры.ФиксированныеНастройки.Отбор.Элементы);
		
		Если ЗначениеОтбора <> Неопределено Тогда
			
			/////////////////////////////////////////////////////////////////////////////
			// Спозиционируем курсов на элементе отбора
			
			// Удалим отбор по подразделению, которые был установлен через параметры формы.
			Поле = Новый ПолеКомпоновкиДанных("Подразделение");
			КоличЭлементов = Параметры.ФиксированныеНастройки.Отбор.Элементы.Количество();
			Для Инд = 1 По КоличЭлементов Цикл
				ОбрИнд = КоличЭлементов - Инд;
				Если Параметры.ФиксированныеНастройки.Отбор.Элементы[ОбрИнд].ЛевоеЗначение = Поле Тогда
					Параметры.ФиксированныеНастройки.Отбор.Элементы.Удалить(ОбрИнд);
				КонецЕсли;
			КонецЦикла;
			
			// Спозиционируем курсор на нужном подразделении
			// что приведен к установке отбора по иенрархии данного подразделения.
			ТекущееПодразделение = ЗначениеОтбора; 
			
			УстановитьОтборПоПодразделению(ЗначениеОтбора);
			
			ВыполнятьОтбор = Ложь;
			
		КонецЕсли;                                 
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Элементы.Список.Отображение = ОтображениеТаблицы.Список;
	
	ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ПравоеЗначение = Новый ПолеКомпоновкиДанных("ЭтоГруппа");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ЛевоеЗначение = Ложь;
	ЭлементОтбора.Использование = Истина;
	
	Если ЗначениеЗаполнено(ТекущееПодразделение) Тогда
		Элементы.СписокПодразделения.ТекущаяСтрока = ТекущееПодразделение;
		//СписокПодразделенияПриАктивизацииСтроки(Элементы.СписокПодразделения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПодразделенияПриАктивизацииСтроки(Элемент)
	
	Если ВыполнятьОтбор Тогда
		УстановитьОтборПоПодразделению(Элементы.СписокПодразделения.ТекущаяСтрока);
	КонецЕсли;
	
	ВыполнятьОтбор = Истина;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоПодразделению(Подразделение)
	
	ПолеОтбора    = Новый ПолеКомпоновкиДанных("Подразделение");	
	ЭлементОтбора = НайтиЭлементОтбораСпискаФизЛиц(ПолеОтбора);
	
	Если Подразделение = Неопределено Тогда
		Если ЭлементОтбора <> Неопределено Тогда
			ЭлементОтбора.Использование = Ложь;
		КонецЕсли;
	Иначе
		Если ЭлементОтбора = Неопределено Тогда
			ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ЛевоеЗначение = ПолеОтбора;
			//ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
		КонецЕсли;
		ЭлементОтбора.ВидСравнения  = ВидСравненияКомпоновкиДанных.ВИерархии;
		ЭлементОтбора.ПравоеЗначение = Подразделение.Ссылка;
		ЭлементОтбора.Использование = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция НайтиЭлементОтбораСпискаФизЛиц(ПолеОтбора)
	
	Для Каждого Элемент Из Список.Отбор.Элементы Цикл
		Если Элемент.ЛевоеЗначение = ПолеОтбора Тогда
			Возврат Элемент;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаСервере
Функция УстановитьОтборПодразделенийПоЭлементамОтбора(ЭлементыОтбора)
	
	ПолеОтбораПоПодразделению = Новый ПолеКомпоновкиДанных("Подразделение");
	ПолеОтбораПоСсылке        = Новый ПолеКомпоновкиДанных("Ссылка");
	
	ЗначениеОтбора = Неопределено;
	
	Для Каждого Элемент Из ЭлементыОтбора Цикл
		
		Если Элемент.ЛевоеЗначение = ПолеОтбораПоПодразделению И Элемент.Использование Тогда
			
			СписокПодразделения.Отбор.Элементы.Очистить();
			
			СписокПодразделений          = Новый СписокЗначений;
			СписокПодразделенийРодителей = Новый СписокЗначений;
			
			Если Элемент.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии Тогда
				
				ЗначениеОтбора = Элемент.ПравоеЗначение;
				
				ТекЭлемент = Элемент.ПравоеЗначение;
				Пока ЗначениеЗаполнено(ТекЭлемент.Родитель) Цикл
					СписокПодразделенийРодителей.Добавить(ТекЭлемент.Родитель);
					ТекЭлемент = ТекЭлемент.Родитель;
				КонецЦикла;
				
				СписокПодразделений.Добавить(Элемент.ПравоеЗначение);
				
			КонецЕсли;	
			
			Если СписокПодразделенийРодителей.Количество() > 0 Тогда // Заполнен список родителей,
				                                                     // которые ведут к подразделениям.
																	 
				ГруппаЭлементовОтбора = СписокПодразделения.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
				ГруппаЭлементовОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
				ГруппаЭлементовОтбора.Использование = Истина;
				
				// Родители подразделений
				ЭлементОтбора = ГруппаЭлементовОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
				ЭлементОтбора.ЛевоеЗначение  = ПолеОтбораПоСсылке;
				ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
				ЭлементОтбора.ПравоеЗначение = СписокПодразделенийРодителей;
				ЭлементОтбора.Использование  = Истина;
				ЭлементОтбора = ГруппаЭлементовОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
				
			Иначе
				ЭлементОтбора = СписокПодразделения.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			КонецЕсли;
			
			// Подразделения, по которым установлен отбор.
			ЭлементОтбора.ЛевоеЗначение  = ПолеОтбораПоСсылке;
			ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии;
			ЭлементОтбора.ПравоеЗначение = СписокПодразделений;
			ЭлементОтбора.Использование  = Истина;
			
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ЗначениеОтбора;
	
КонецФункции

