
&НаСервере
Процедура Шаг1НаСервере()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВидыЗаписей.Код КАК Код,
	|	ВидыЗаписей.Ссылка КАК ВидЗаписи,
	|	ВидыЗаписей.Наименование КАК Наименование
	|ПОМЕСТИТЬ ВТ_Промежуточная
	|ИЗ
	|	Справочник.ВидыЗаписей КАК ВидыЗаписей
	|ГДЕ
	|	НЕ ВидыЗаписей.ПометкаУдаления
	|	И ВидыЗаписей.УдалитьОрганизация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Промежуточная.Код КАК Код,
	|	ВТ_Промежуточная.ВидЗаписи КАК ВидЗаписи,
	|	ВТ_Промежуточная.Наименование КАК Наименование,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_Промежуточная1.ВидЗаписи) КАК Номер
	|ПОМЕСТИТЬ ВТ_Подзапрос
	|ИЗ
	|	ВТ_Промежуточная КАК ВТ_Промежуточная
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Промежуточная КАК ВТ_Промежуточная1
	|		ПО ВТ_Промежуточная.Наименование = ВТ_Промежуточная1.Наименование
	|			И ВТ_Промежуточная.ВидЗаписи >= ВТ_Промежуточная1.ВидЗаписи
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Промежуточная.Код,
	|	ВТ_Промежуточная.ВидЗаписи,
	|	ВТ_Промежуточная.Наименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Подзапрос.Код КАК Код,
	|	ВТ_Подзапрос.ВидЗаписи КАК ВидЗаписи,
	|	ВТ_Подзапрос.Наименование КАК Наименование,
	|	ВТ_Подзапрос.Номер КАК Номер
	|ИЗ
	|	ВТ_Подзапрос КАК ВТ_Подзапрос
	|%ДопУсловие%
	|УПОРЯДОЧИТЬ ПО
	|	Наименование,
	|	Номер"; 	
	
	Запрос = Новый Запрос;
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "%ДопУсловие%", "");
	Запрос.УстановитьПараметр("Организация", Объект.Организация);	
	Объект.ТЧВидыЗаписей.Загрузить(Запрос.Выполнить().Выгрузить());
	
	ЗапросОсновные = Новый Запрос;
	ЗапросОсновные.Текст = СтрЗаменить(ТекстЗапроса, "%ДопУсловие%", "ГДЕ ВТ_Подзапрос.Номер = 1");
	ЗапросОсновные.УстановитьПараметр("Организация", Объект.Организация);
	Объект.ТЧОсновные.Загрузить(ЗапросОсновные.Выполнить().Выгрузить());
	
	ЗапросКЗамене = Новый Запрос;
	ЗапросКЗамене.Текст = СтрЗаменить(ТекстЗапроса, "%ДопУсловие%", "ГДЕ ВТ_Подзапрос.Номер > 1");
	ЗапросКЗамене.УстановитьПараметр("Организация", Объект.Организация);	
	Объект.ТЧКЗамене.Загрузить(ЗапросКЗамене.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьЭлемент(Наименование, ОсновнойЭлемент, ЗаменяемыйЭлемент)
	
	ОсновнойЭлементОбъект = ОсновнойЭлемент.ПолучитьОбъект();
	
	Для Каждого ТекСтрока Из ЗаменяемыйЭлемент.УдалитьСобытия Цикл
		Если ЗначениеЗаполнено(ТекСтрока.Событие) Тогда
			Строки = ОсновнойЭлемент.УдалитьСобытия.НайтиСтроки(Новый Структура("Событие", ТекСтрока.Событие));
			Если Строки.Количество() > 0 Тогда
				Продолжить;
			Иначе
				НовСтр = ОсновнойЭлементОбъект.УдалитьСобытия.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр, ТекСтрока);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Попытка
		ОсновнойЭлементОбъект.Записать();
		ПометитьНаУдалениеЗаменяемыйЭлемент(ЗаменяемыйЭлемент);
	Исключение
		Сообщить("Проблема с элементом " + Наименование + ", код: " + ЗаменяемыйЭлемент.Код);
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ПометитьНаУдалениеЗаменяемыйЭлемент(ЗаменяемыйЭлемент)
	
	ЗаменяемыйЭлементОбъект = ЗаменяемыйЭлемент.ПолучитьОбъект();
	ЗаменяемыйЭлементОбъект.ПометкаУдаления = Истина;
	Попытка
		ЗаменяемыйЭлементОбъект.Записать();
	Исключение
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура Шаг1(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
		ПоказатьПредупреждение(, "Заполнение Организационной единицы обязательно!");
		Возврат;
	КонецЕсли;
	
	Шаг1НаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьНаСервере()
	
	Наименование = Неопределено;
	ОсновнойЭлемент = Неопределено;
	ЗаменяемыйЭлемент = Неопределено;
	
	Для Каждого ТекСтр Из Объект.ТЧВидыЗаписей Цикл
		Если ТекСтр.Номер = 1 Тогда
			Наименование = ТекСтр.Наименование;
			ОсновнойЭлемент = ТекСтр.ВидЗаписи;
		Иначе
			ЗаменяемыйЭлемент = ТекСтр.ВидЗаписи;
		КонецЕсли;
		Если ЗаменяемыйЭлемент = ТекСтр.ВидЗаписи Тогда 
			//свертка элементов
			ОбработатьЭлемент(Наименование, ОсновнойЭлемент, ЗаменяемыйЭлемент);
		КонецЕсли;			
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Обработать(Команда)
	ОбработатьНаСервере(); 	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗаменуСсылокНаСервере()
	
	НачатьТранзакцию();
	
	Для Каждого ТекСтр Из Объект.ТЧОсновные Цикл
		СтрокиОтбора = Объект.ТЧКЗамене.НайтиСтроки(Новый Структура("Наименование", ТекСтр.Наименование));
		Если СтрокиОтбора.Количество() > 0 Тогда
			мСсылки = Новый Массив;
			Для Каждого НайденнаяСтрока Из СтрокиОтбора Цикл
				мСсылки.Добавить(НайденнаяСтрока.ВидЗаписи);
			КонецЦикла;
		Иначе
			Продолжить;
		КонецЕсли;
		НайденныеСсылки = НайтиПоСсылкам(мСсылки);
		ОсновнойЭлемент = ТекСтр.ВидЗаписи;	
		Если НайденныеСсылки.Количество() > 0 Тогда
			ЗаменаСсылокМетаданные(ОсновнойЭлемент, НайденныеСсылки);
		КонецЕсли;
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

&НаСервере
Процедура ЗаменаСсылокМетаданные(ОсновнойЭлемент, НайденныеСсылки)
	
	Для Каждого Найденная Из НайденныеСсылки Цикл
		
		//Документы и Справочники
		Если Метаданные.Документы.Содержит(Найденная.Метаданные)
			Или Метаданные.Справочники.Содержит(Найденная.Метаданные) Тогда
			
			ОбъектДанных = Найденная.Данные.ПолучитьОбъект();
			
			//Универсальный
			//Для Каждого Рекв Из Найденная.Метаданные.Реквизиты Цикл
			//	Если ОбъектДанных[Рекв.Имя] = Найденная.Ссылка Тогда
			//		ОбъектДанных[Рекв.Имя] = ОсновноеСобытие;
			//	КонецЕсли;
			//КонецЦикла;
			Для Каждого Рекв Из Найденная.Метаданные.Реквизиты Цикл
				Если Рекв.Имя = "ВидЗаписи" Тогда
					ОбъектДанных[Рекв.Имя] = ОсновнойЭлемент;
				КонецЕсли;
			КонецЦикла;    			
			
			//Для Каждого ТЧ Из Найденная.Метаданные.ТабличныеЧасти Цикл					
			//	Для Каждого Рекв ИЗ ТЧ.Реквизиты Цикл 						
			//		Для Каждого СтрТЧ Из ОбъектДанных[ТЧ.Имя] Цикл
			//			Если СтрТЧ[Рекв.Имя] = Найденная.Ссылка Тогда
			//				СтрТЧ[Рекв.Имя] = ОсновнойЭлемент;
			//			КонецЕсли;
			//		КонецЦикла;						
			//	КонецЦикла; 					
			//КонецЦикла;
			
			//ОбъектДанных.ОбменДанными.Загрузка = Истина;
			//Попытка
				ОбъектДанных.Записать();
			//Исключение
			//	Сообщить("Проблема с объектом " + ОбъектДанных);
			//КонецПопытки; 			
			
			//Регистры сведений	
		ИначеЕсли Метаданные.РегистрыСведений.Содержит(Найденная.Метаданные) Тогда
			
			//Универсальный
			Набор = РегистрыСведений[Найденная.Метаданные.Имя].СоздатьНаборЗаписей();
			
			Если ТипЗнч(Набор) = Тип("РегистрСведенийНаборЗаписей.ШаблоныТекстаЗаписейОЖ") Тогда
				Набор.Отбор["ВидЗаписи"].Установить(Найденная.Данные["ВидЗаписи"], Истина); 				
				Набор.Прочитать();
				Набор.Очистить();
			ИначеЕсли ТипЗнч(Набор) = Тип("РегистрСведенийНаборЗаписей.ЗаменаВидовЗаписи") Тогда
				Возврат;
			Иначе 				
				Если Найденная.Метаданные.РежимЗаписи = Метаданные.СвойстваОбъектов.РежимЗаписиРегистра.ПодчинениеРегистратору Тогда
					Набор.Отбор.Регистратор.Установить(Найденная.Данные.Регистратор, Истина);
					Набор.Отбор.НомерСтроки.Установить(Найденная.Данные.НомерСтроки, Истина);
				Иначе
					Для Каждого Измер Из Найденная.Метаданные.Измерения Цикл
						Набор.Отбор[Измер.Имя].Установить(Найденная.Данные[Измер.Имя], Истина)
					КонецЦикла;
					Если Найденная.Метаданные.ПериодичностьРегистраСведений <> Метаданные.СвойстваОбъектов.ПериодичностьРегистраСведений.Непериодический Тогда
						Набор.Отбор.Период.Установить(Найденная.Данные.Период, Истина);
					КонецЕсли;
				КонецЕсли;
				
				Набор.Прочитать();
				
				Для Каждого ПолеТаб Из Найденная.Метаданные.Измерения Цикл
					Для Каждого Запись Из Набор Цикл
						Если Запись[ПолеТаб.Имя] = Найденная.Ссылка Тогда
							Запись[ПолеТаб.Имя] = ОсновнойЭлемент;
						КонецЕсли;;
					КонецЦикла;
				КонецЦикла;
				
				//Для Каждого ПолеТаб Из Найденная.Метаданные.Ресурсы Цикл
				//	Для Каждого Запись Из Набор Цикл
				//		Если Запись[ПолеТаб.Имя] = Найденная.Ссылка Тогда
				//			Запись[ПолеТаб.Имя] = ОсновнойЭлемент;
				//		КонецЕсли;;
				//	КонецЦикла;
				//КонецЦикла;
				//
				//Для Каждого ПолеТаб Из Найденная.Метаданные.Реквизиты Цикл
				//	Для Каждого Запись Из Набор Цикл
				//		Если Запись[ПолеТаб.Имя] = Найденная.Ссылка Тогда
				//			Запись[ПолеТаб.Имя] = ОсновнойЭлемент;
				//		КонецЕсли;;
				//	КонецЦикла;
				//КонецЦикла;
				
			КонецЕсли;
			
			Набор.ОбменДанными.Загрузка = Истина;
			Попытка
				Набор.Записать();
			Исключение
				Сообщить("Проблема с набором данных " + Набор);
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗаменуСсылок(Команда)
	ВыполнитьЗаменуСсылокНаСервере();
	ПоказатьПредупреждение(, "Теперь нужно запустить Удаление помеченных объектов!!");
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВидыЗаписей.Ссылка КАК ВидЗаписи,
		|	ВидыЗаписей.Код КАК Код
		|ИЗ
		|	Справочник.ВидыЗаписей КАК ВидыЗаписей
		|ГДЕ
		|	ВидыЗаписей.ПометкаУдаления
		|	И ВидыЗаписей.УдалитьОрганизация = &Организация
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВидыЗаписей.Наименование";
	
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	
	Объект.ТЧКорректировка.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
		ПоказатьПредупреждение(, "Заполнение Организационной единицы обязательно!");
		Возврат;
	КонецЕсли;
	
	ЗаполнитьНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПодобратьПоНаименованиюНаСервере()
	
	Для Каждого ТекСтрока Из Объект.ТЧКорректировка Цикл
		ЗаполнитьВидЗаписиОсновной(ТекСтрока);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьВидЗаписиОсновной(ТекСтрока)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВидыЗаписей.Ссылка КАК Ссылка,
		|	ВидыЗаписей.Код КАК Код
		|ИЗ
		|	Справочник.ВидыЗаписей КАК ВидыЗаписей
		|ГДЕ
		|	НЕ ВидыЗаписей.ПометкаУдаления
		|	И ВидыЗаписей.Наименование = &Наименование
		|	И ВидыЗаписей.УдалитьОрганизация = &Организация";
	
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	
	Запрос.УстановитьПараметр("Наименование", ТекСтрока.ВидЗаписи.Наименование);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		ТекСтрока.ВидЗаписиОсновной = Результат.Ссылка;
		ТекСтрока.КодОсновного = Результат.Код;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ПодобратьПоНаименованию(Команда)
	ПодобратьПоНаименованиюНаСервере();
КонецПроцедуры 

&НаСервере
Процедура ЗаменитьСсылкиНаСервере()
	
	НачатьТранзакцию();
	
	Для Каждого ТекСтр Из Объект.ТЧКорректировка Цикл 
		мСсылки = Новый Массив;
		мСсылки.Добавить(ТекСтр.ВидЗаписи);
		НайденныеСсылки = НайтиПоСсылкам(мСсылки);
		Если НайденныеСсылки.Количество() > 0 Тогда
			ЗаменаСсылокМетаданные(ТекСтр.ВидЗаписиОсновной, НайденныеСсылки);
		КонецЕсли;
	КонецЦикла; 	
	
	ЗафиксироватьТранзакцию();  
	
КонецПроцедуры   

&НаКлиенте
Процедура ЗаменитьСсылки(Команда)
	ЗаменитьСсылкиНаСервере();
	ПоказатьПредупреждение(, "Теперь нужно запустить Удаление помеченных объектов!!");
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИзРегистраЗаменыНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаменаВидовЗаписи.ЧтоМеняем КАК ВидЗаписи,
		|	ЗаменаВидовЗаписи.ЧтоМеняем.Код КАК Код,
		|	ЗаменаВидовЗаписи.НаЧтоМеняем КАК ВидЗаписиОсновной,
		|	ЗаменаВидовЗаписи.НаЧтоМеняем.Код КАК КодОсновного
		|ИЗ
		|	РегистрСведений.ЗаменаВидовЗаписи КАК ЗаменаВидовЗаписи";
	
	Объект.ТЧКорректировка.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзРегистраЗамены(Команда)
	ЗаполнитьИзРегистраЗаменыНаСервере();
КонецПроцедуры





























