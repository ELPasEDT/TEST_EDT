
&НаКлиенте
Перем мСтруктураДанныхДокумента;

&НаКлиенте
Перем мФормаДок;

&НаКлиенте
Перем мСтриницы;

&НаКлиенте
Перем мШаблон;

&НаКлиенте
Перем ПолучитьНастройкиОткрытияФормыВыбораВидаЗаписи;


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Пользователь = ПараметрыСеанса.ТекущийПользователь;
	Подразделение = Пользователь.Подразделение;
	ВидыЗаписей.Параметры.УстановитьЗначениеПараметра("Подразделение", Подразделение);
    
КонецПроцедуры  

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Выполнение стаднартных обработчиков при создании и открытии формы
	мФормаДок = ПолучитьФорму("Документ.ОперативныйЖурнал.Форма.мФормаДокумента");
	мФормаДок.Открыть();
	
	Если Не мФормаДок.Открыта() Тогда 
		мФормаДок = Неопределено;
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////////////////
	// Запомтить данные формы в структуре
	
	мСтруктураДанныхДокумента = ПолучитьСтруктуруДокумента();
	
	Для Каждого Реквизит Из мСтруктураДанныхДокумента.Реквизиты Цикл
		мСтруктураДанныхДокумента.Реквизиты[Реквизит.Ключ] = мФормаДок.Объект[Реквизит.Ключ];
	КонецЦикла;
	
	Для Каждого ТабЧасть Из мСтруктураДанныхДокумента.ТабличныеЧасти Цикл
		
		Для Каждого СтрТЧ Из мФормаДок.Объект[ТабЧасть.Ключ] Цикл
			
			НовСтр = Новый Структура;
			
			Для Каждого ИмяРеквТЧ Из ТабЧасть.Значение.Реквизиты Цикл
				НовСтр.Вставить(ИмяРеквТЧ, СтрТЧ[ИмяРеквТЧ]);
			КонецЦикла;
			
			мСтруктураДанныхДокумента.ТабличныеЧасти[ТабЧасть.Ключ].Строки.Добавить(НовСтр);
			
		КонецЦикла;
		
	КонецЦикла;
	
	мНастройкиВидовЗаписей = мФормаДок.ПолучитьНастройкиОткрытияФормыВыбораВидаЗаписи();
	
	мФормаДок.Закрыть();
	
	//
	////////////////////////////////////////////////////////////////////////////////
	
	СотрудникиВДокументе = Новый СписокЗначений;
	Для Каждого СтрТЧ Из мФормаДок.Объект.Сотрудники Цикл
		СотрудникиВДокументе.Добавить(СтрТЧ.Сотрудник);
	КонецЦикла;
	
	УстановитьОтборСписковЭлементов(мСтруктураДанныхДокумента.Реквизиты.Подразделение, СотрудникиВДокументе);
	
	// Установим отбор видов записей
	
	ВидыЗаписей.Отбор.Элементы.Очистить();	
	СкопироватьЭлементыОтбопа(мНастройкиВидовЗаписей.Отбор.Элементы , ВидыЗаписей.Отбор.Элементы);	
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// КОМАНДЫ

&НаКлиенте
Процедура Далее(Команда)
	ПереключитьСтраницу(1);
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	ПереключитьСтраницу(-1);
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьЭлементСписка(Команда)
	
	Список = Неопределено;
	ВыбраннаяСтрока = Неопределено;
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВыборОборудования Тогда
		Список = "Оборудование";
		ВыбраннаяСтрока = Элементы.СписокОборудования.ТекущаяСтрока;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВыборСотрудников Тогда
		Список = "Сотрудники";
		ВыбраннаяСтрока = Элементы.СписокСотрудников.ТекущаяСтрока;
	КонецЕсли;
	
	Если Список <> Неопределено И ВыбраннаяСтрока <> Неопределено Тогда
		МодифицироватьСписокВыбранных(Список, ВыбраннаяСтрока);
		ОбновитьСодержаниеЗаписи();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьВыборЭлементаСписка(Команда)
	
	Список = Неопределено;
	ВыбраннаяСтрока = Неопределено;
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВыборОборудования Тогда
		Список = "Оборудование";
		ВыбраннаяСтрока = Элементы.ВыбранноеОборудование.ТекущаяСтрока;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВыборСотрудников Тогда
		Список = "Сотрудники";
		ВыбраннаяСтрока = Элементы.ВыбранныеСотрудники.ТекущаяСтрока;
	КонецЕсли;
	
	Если Список <> Неопределено И ВыбраннаяСтрока <> Неопределено Тогда
		МодифицироватьСписокВыбранных(Список, ВыбраннаяСтрока);
		ОбновитьСодержаниеЗаписи();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсеЭлементыСписка(Команда)
	
	Список = Неопределено;
	ЭлементыСписка = Неопределено;
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВыборОборудования Тогда
		//Список = "Оборудование";
		//ВыбраннаяСтрока = Элементы.СписокОборудования.ТекущаяСтрока;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВыборСотрудников Тогда
		Список = "Сотрудники";
		
		ЭлементыСписка = ПолучтьЭлементыДинамическогоСписка();
		
		Для Каждого Элемент Из ЭлементыСписка Цикл			
			МодифицироватьСписокВыбранных(Список, Элемент);			
		КонецЦикла;
		ОбновитьСодержаниеЗаписи();
		
		//ВыбраннаяСтрока = Элементы.СписокС//	МодифицироватьСписокВыбранных(Список, ВыбраннаяСтрока);
	//	ОбновитьСодержаниеЗаписи();отрудников.ТекущаяСтрока;
	КонецЕсли;
	
	//Если Список <> Неопределено И ВыбраннаяСтрока <> Неопределено Тогда
	//	МодифицироватьСписокВыбранных(Список, ВыбраннаяСтрока);
	//	ОбновитьСодержаниеЗаписи();
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьВыборВсехЭлементовСписка(Команда)
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВыборОборудования Тогда
		
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВыборСотрудников Тогда
		Список = "Сотрудники";
		
		ЭлементыСписка = ПолучтьЭлементыДинамическогоСписка();
		
		КоличЭлементов = Сотрудники.Количество();
		
		Для Инд = 1 По КоличЭлементов Цикл
			ОбрИнд = КоличЭлементов - Инд;
			Элемент = Сотрудники[ОбрИнд];			
			МодифицироватьСписокВыбранных(Список, Элемент.Сотрудник);			
		КонецЦикла;
		ОбновитьСодержаниеЗаписи();
		
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ

&НаКлиенте
Процедура ВыбранноеОборудованиеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	МодифицироватьСписокВыбранных("Оборудование", ВыбраннаяСтрока);
	ОбновитьСодержаниеЗаписи();
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеСотрудникиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	МодифицироватьСписокВыбранных("Сотрудники", ВыбраннаяСтрока);
	ОбновитьСодержаниеЗаписи();
КонецПроцедуры

&НаКлиенте
Процедура ВидыЗаписейВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПереключитьСтраницу(1);
	мСтруктураДанныхДокумента.Реквизиты.ВидЗаписи = Элемент.ТекущиеДанные.Ссылка;
	УстиновитьОтборСпискаСобытий(Элемент.ТекущиеДанные.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура СобытияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПереключитьСтраницу(1);
КонецПроцедуры

&НаКлиенте
Процедура СписокОборудованияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	МодифицироватьСписокВыбранных("Оборудование", ВыбраннаяСтрока);
	ОбновитьСодержаниеЗаписи();
КонецПроцедуры

&НаКлиенте
Процедура СписокСотрудниковВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	МодифицироватьСписокВыбранных("Сотрудники", ВыбраннаяСтрока);
	ОбновитьСодержаниеЗаписи();
КонецПроцедуры

&НаКлиенте
Процедура МодифицироватьСписокВыбранных(Список, Знач ЭлементСписка)
	
	Если Список = "Оборудование" Тогда
		ТабВыбранных    = Оборудование;
		СписокЭлементов = СписокОборудования;
		ИмяКолонки      = "Оборудование";
	ИначеЕсли Список = "Сотрудники" Тогда
		ТабВыбранных    = Сотрудники;
		СписокЭлементов = СписокСотрудников;
		ИмяКолонки      = "Сотрудник";
	Иначе
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ЭлементСписка) = Тип("Число") Тогда
		ЭлементСписка = ТабВыбранных.НайтиПоИдентификатору(ЭлементСписка)[ИмяКолонки];
	КонецЕсли;
	
	Найденные = ТабВыбранных.НайтиСтроки(Новый Структура(ИмяКолонки, ЭлементСписка));
	
	Если Найденные.Количество() = 0 Тогда
		ТабВыбранных.Добавить()[ИмяКолонки] = ЭлементСписка;
	Иначе
		ТабВыбранных.Удалить(Найденные[0]);
	КонецЕсли;
	
	ПолеОтбора = Новый ПолеКомпоновкиДанных("Ссылка");
	
	Для Каждого Элемент Из СписокЭлементов.Отбор.Элементы Цикл
		Если ТипЗнч(Элемент) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") Тогда
			Для Каждого ЭлементГруппы Из Элемент.Элементы Цикл
				Если ЭлементГруппы.ЛевоеЗначение = ПолеОтбора
					И ТипЗнч(ЭлементГруппы.ПравоеЗначение) = Тип("СписокЗначений")
					И ЭлементГруппы.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке Тогда
					
					НайденнаяСтрока = ЭлементГруппы.ПравоеЗначение.НайтиПоЗначению(ЭлементСписка);
					
					Если НайденнаяСтрока = Неопределено Тогда
						ЭлементГруппы.ПравоеЗначение.Добавить(ЭлементСписка);
					Иначе
						ЭлементГруппы.ПравоеЗначение.Удалить(НайденнаяСтрока);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНЕЦИИ

&НаСервере
Функция ПолучтьЭлементыДинамическогоСписка()
	
	МассивСотрудников = Новый Массив;
	
	ТекстЗапроса = "";
	
	//Если СписокСотрудников.ПроизвольныйЗапрос Тогда
	//	ТекстЗапроса = СписокСотрудников.ТекстЗапроса;
	//Иначе
		ТекстЗапроса = 
		"ВЫБРАТЬ разрешенные
		|	Таб.Ссылка КАК Ссылка
		|ИЗ
		|	%1 КАК Таб
		|Где Таб.Ссылка В (&Список) И Не Таб.Ссылка В (&Выбранные)
		|";
		ТекстЗапроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗапроса, СписокСотрудников.ОсновнаяТаблица);
	//КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Список", СписокСотрудников.Отбор.Элементы[0].Элементы[0].ПравоеЗначение);
	Запрос.УстановитьПараметр("Выбранные", СписокСотрудников.Отбор.Элементы[0].Элементы[1].ПравоеЗначение);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	//СКД = Новый СхемаКомпоновкиДанных;
	//
	//Источник = СКД.ИсточникиДанных.Добавить();
	//Источник.Имя = "ЛокальнаяБаза";
	//Источник.СтрокаСоединения = "";
	//Источник.ТипИсточникаДанных = "Local";
	//
	//НаборДанных = СКД.НаборыДанных.Добавить(Тип("НаборДанныхЗапросСхемыКомпоновкиДанных"));
	//НаборДанных.Запрос = ТекстЗапроса;
	//НаборДанных.Имя = "Запрос1";
	//НаборДанных.АвтоЗаполнениеДоступныхПолей = Истина;
	//НаборДанных.ИсточникДанных = "ЛокальнаяБаза";
	//
	//НастройкиКомпоновщика = СписокСотрудников.КомпоновщикНастроек.ПолучитьНастройки();
	//КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	//МакетКомпоновки   = КомпоновщикМакета.Выполнить(СКД, НастройкиКомпоновщика);
	//
	//
	//ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	//ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);

	//ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	//Результат = Новый ТаблицаЗначений;
	//Результат.Колонки.Добавить("Ссылка");
	//ПроцессорВывода.УстановитьОбъект(Результат);

	//
	//ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецФункции

&НаСервере
Процедура УстановитьОтборСписковЭлементов(Подразделение, Знач ДоступныеСотрудники)
	
	// Оборуодование
	
	ГрупаУсловийОтбора = СписокОборудования.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГрупаУсловийОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	ЭлементОтбора = ГрупаУсловийОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Подразделение");
	ЭлементОтбора.ПравоеЗначение = Подразделение;
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.Использование = Истина;
	
	ЭлементОтбора = ГрупаУсловийОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке;
	ЭлементОтбора.ПравоеЗначение = Новый СписокЗначений;
	ЭлементОтбора.Использование = Истина;
	
	// Сотрудники
	
	ГрупаУсловийОтбора = СписокСотрудников.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГрупаУсловийОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	ПолеСсылка = Новый ПолеКомпоновкиДанных("Ссылка");
	
	ЭлементОтбора = ГрупаУсловийОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = ПолеСсылка;
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	ЭлементОтбора.ПравоеЗначение = ДоступныеСотрудники;
	ЭлементОтбора.Использование = Истина;
	
	ЭлементОтбора = ГрупаУсловийОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = ПолеСсылка;
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке;
	ЭлементОтбора.ПравоеЗначение = Новый СписокЗначений;
	ЭлементОтбора.Использование = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСодержаниеЗаписи()
	
	СтрокаОборудования = "";
	СтрокаСотрудников  = "";
	СтрокаОборудованиеПолностью = "";
	
	Для Каждого СтрОборудование Из Объект.Оборудование Цикл
		Если Не ПустаяСтрока(СтрокаОборудования) Тогда
			СтрокаОборудования = СтрокаОборудования + "; ";
			СтрокаОборудованиеПолностью = СтрокаОборудованиеПолностью + "; ";
		КонецЕсли;
		СтрокаОборудования = СтрокаОборудования + ВернутьПредставлениеОборудования(СтрОборудование.Оборудование);
		СтрокаОборудованиеПолностью = СтрокаОборудованиеПолностью + СтрОборудование.Оборудование;
	КонецЦикла;
	
	Для Каждого СтрСотрудник Из Объект.Сотрудники Цикл			
		Если СтрСотрудник.Выбран Тогда
			Если Не ПустаяСтрока(СтрокаСотрудников) Тогда
				СтрокаСотрудников = СтрокаСотрудников + "; ";
			КонецЕсли;
			СтрокаСотрудников = СтрокаСотрудников + ВернутьФИО(СтрСотрудник.Сотрудник);
		КонецЕсли;
	КонецЦикла;
	
	Объект.Комментарий = СтрЗаменить(Объект.мШаблон, "#ОборудованиеПолностью", СтрокаОборудованиеПолностью);
	Объект.Комментарий = СтрЗаменить(Объект.Комментарий, "#Оборудование", СтрокаОборудования);	
	Объект.Комментарий = СтрЗаменить(Объект.Комментарий, "#Сотрудники", СтрокаСотрудников);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВернутьФИО(Сотрудник)
	
	Возврат ФизическиеЛицаКлиентСервер.ФамилияИнициалыФизЛица(Сотрудник.Наименование);
	
КонецФункции

&НаСервереБезКонтекста
Функция ВернутьПредставлениеОборудования(Оборудование)
	
	Если ЗначениеЗаполнено(Оборудование.ДиспетчерскоеНаименование) Тогда
		Возврат Оборудование.ДиспетчерскоеНаименование;
	Иначе
		Возврат Оборудование;
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьШаблонТекста(ВидЗаписи, Событие, Подразделение)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ШаблоныТекстаЗаписейОЖ.ШаблонТекста КАК ШаблонТекста
	|ИЗ
	|	РегистрСведений.ШаблоныТекстаЗаписейОЖ КАК ШаблоныТекстаЗаписейОЖ
	|ГДЕ
	|	ШаблоныТекстаЗаписейОЖ.ВидЗаписи = &ВидЗаписи
	|	И (ШаблоныТекстаЗаписейОЖ.Событие = &Событие
	|			ИЛИ ШаблоныТекстаЗаписейОЖ.Событие = ЗНАЧЕНИЕ(Справочник.События.ПустаяСсылка))
	|	И (ШаблоныТекстаЗаписейОЖ.Подразделение = &Подразделение
	|			ИЛИ ШаблоныТекстаЗаписейОЖ.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка))
	|	И (ШаблоныТекстаЗаписейОЖ.Организация = &Организация
	|			ИЛИ ШаблоныТекстаЗаписейОЖ.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ШаблоныТекстаЗаписейОЖ.Событие УБЫВ,
	|	ШаблоныТекстаЗаписейОЖ.Подразделение УБЫВ");
	Запрос.УстановитьПараметр("ВидЗаписи", ВидЗаписи);
	Запрос.УстановитьПараметр("Событие", Событие);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("Организация", Подразделение.Организация);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ШаблонТекста;
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

&НаКлиенте
Процедура ОбработатьВыборСотрудника(ВыбраннаяСтрока)
	СтрокаДанных = Сотрудники.НайтиПоИдентификатору(ВыбраннаяСтрока);
	СтрокаДанных.Выбран = Не СтрокаДанных.Выбран;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСтруктуруДокумента()
	
	СтруктураДокумента = Новый Структура("Реквизиты, ТабличныеЧасти", Новый Структура, Новый Структура);
	
	МетаданныеДок = Метаданные.Документы.ОперативныйЖурнал;
	
	СтруктураДокумента.Реквизиты.Вставить("Дата");
	Для Каждого Реквизит Из МетаданныеДок.Реквизиты Цикл
		СтруктураДокумента.Реквизиты.Вставить(Реквизит.Имя);
	КонецЦикла;
	
	Для Каждого ТабЧасть Из МетаданныеДок.ТабличныеЧасти Цикл
		СтруктураДокумента.ТабличныеЧасти.Вставить(ТабЧасть.Имя, Новый Структура);
		СтруктураДокумента.ТабличныеЧасти[ТабЧасть.Имя].Вставить("Реквизиты", Новый Массив);
		СтруктураДокумента.ТабличныеЧасти[ТабЧасть.Имя].Вставить("Строки", Новый Массив);
		Для Каждого Реквизит Из МетаданныеДок.ТабличныеЧасти[ТабЧасть.Имя].Реквизиты Цикл
			СтруктураДокумента.ТабличныеЧасти[ТабЧасть.Имя].Реквизиты.Добавить(Реквизит.Имя);
		КонецЦикла;
	КонецЦикла;
	
	Возврат СтруктураДокумента;
	
КонецФункции

&НаКлиенте
Процедура ПереключитьСтраницу(Направление)
	ТекСтраница    = Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя;
	ИндТекСтраницы = мСтриницы.Найти(ТекСтраница);
	ВсегоСтраниц   = мСтриницы.Количество();
	ИндСледующей   = ИндТекСтраницы + Направление;
	
	Если ИндСледующей >= 0 И ИндСледующей < ВсегоСтраниц Тогда
		ЭтоКрайняяСтроница = (ИндСледующей = (ВсегоСтраниц - 1));
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы[мСтриницы[ИндСледующей]];
		УстановитьЗаголовокКнопкиДалее(ЭтоКрайняяСтроница И ИндТекСтраницы > 2);
		ЗапомнитьВведенныеДанные(мСтриницы[ИндТекСтраницы]);
		ПрочитатьВведенныеДанные(мСтриницы[ИндСледующей]);
	КонецЕсли;
	
	// Получаем шаблон после выбора события
	Если мСтриницы[ИндТекСтраницы] = "ГруппаВыборСобытия" Тогда
		мШаблон = ПолучитьШаблонТекста(
			мСтруктураДанныхДокумента.Реквизиты.ВидЗаписи,
			мСтруктураДанныхДокумента.Реквизиты.Событие,
			мСтруктураДанныхДокумента.Реквизиты.Подразделение);
		ОбновитьСодержаниеЗаписи();
		Если мШаблон <> Неопределено Тогда
			СкорректироватьСоставСтраниц();
			ВсегоСтраниц   = мСтриницы.Количество();
			
			Если ИндСледующей >= 0 И ИндСледующей < ВсегоСтраниц Тогда
				ЭтоКрайняяСтроница = (ИндСледующей = (ВсегоСтраниц - 1));
				Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы[мСтриницы[ИндСледующей]];
				УстановитьЗаголовокКнопкиДалее(ЭтоКрайняяСтроница И ИндТекСтраницы > 2);
				ЗапомнитьВведенныеДанные(мСтриницы[ИндТекСтраницы]);
				ПрочитатьВведенныеДанные(мСтриницы[ИндСледующей]);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ИндСледующей = ВсегоСтраниц Тогда
		ЗавершитьВвод();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СкорректироватьСоставСтраниц()
	
	мСтриницы.Очистить();
	мСтриницы.Добавить("ГруппаВыборВидиЗаписи");
	мСтриницы.Добавить("ГруппаВыборСобытия");
	 	
	Если СтрНайти(мШаблон, "#Оборудование") ИЛИ СтрНайти(мШаблон, "#ОборудованиеПолностью") Тогда
		мСтриницы.Добавить("ГруппаВыборОборудования");
	КонецЕсли;                                                                                
	
	Если СтрНайти(мШаблон, "#Сотрудники") Тогда
		мСтриницы.Добавить("ГруппаВыборСотрудников");
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗначениеРеквизитаОбъекта(Объект, ИмяРеквизита)
	Возврат Объект[ИмяРеквизита];
КонецФункции

&НаКлиенте
Процедура ЗавершитьВвод()
	мФормаДок.Открыть();
	
	мФормаДок.Объект.Сотрудники.Очистить();
	мФормаДок.Объект.Оборудование.Очистить();
	
	Для Каждого Реквизит Из мСтруктураДанныхДокумента.Реквизиты Цикл
		мФормаДок.Объект[Реквизит.Ключ] = Реквизит.Значение;
	КонецЦикла;
	
	Для Каждого Стр Из Оборудование Цикл
		НовСтр = мФормаДок.Объект.Оборудование.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Стр);
		НовСтр.СтатусОборудования = ПредопределенноеЗначение("Перечисление.СтатусыОборудования.ЗаписьОЖ");
	КонецЦикла;
	
	Для Каждого Стр Из Сотрудники Цикл
		НовСтр = мФормаДок.Объект.Сотрудники.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Стр);
		НовСтр.Выбран = Истина;
	КонецЦикла;
	
	мФормаДок.ОбновитьЗаголовокСтраницы("Оборудование");
	мФормаДок.ОбновитьЗаголовокСтраницы("Сотрудники");
	
	мФормаДок.Объект.мШаблон = мШаблон;
	
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьВведенныеДанные(ИмяСтраницы)
	
	Если ИмяСтраницы = "ГруппаВыборВидиЗаписи" Тогда
		//Элементы.ВидыЗаписей.ТекущаяСтрока = мСтруктураДанныхДокумента.Реквизиты.ВидЗаписи; 
	ИначеЕсли ИмяСтраницы = "ГруппаВыборСобытия" Тогда
		Элементы.События.ТекущаяСтрока = мСтруктураДанныхДокумента.Реквизиты.Событие;
	ИначеЕсли ИмяСтраницы = "ГруппаСодержаниеЗаписи" Тогда
		Комментарий = мСтруктураДанныхДокумента.Реквизиты.Комментарий;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапомнитьВведенныеДанные(ИмяСтраницы)
	
	Если ИмяСтраницы = "ГруппаВыборВидиЗаписи" Тогда
		мСтруктураДанныхДокумента.Реквизиты.ВидЗаписи = Элементы.ВидыЗаписей.ТекущаяСтрока;
	ИначеЕсли ИмяСтраницы = "ГруппаВыборСобытия" Тогда
		мСтруктураДанныхДокумента.Реквизиты.Событие = Элементы.События.ТекущаяСтрока;
	//ИначеЕсли ИмяСтраницы = "ГруппаСодержаниеЗаписи" Тогда
		
	КонецЕсли;
	
	мСтруктураДанныхДокумента.Реквизиты.Комментарий = Комментарий;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗаголовокКнопкиДалее(ЭтоКрайняяСтроница)
	Если ЭтоКрайняяСтроница Тогда
		Элементы.ФормаДалее.Заголовок = "Готово";
	Иначе
		Элементы.ФормаДалее.Заголовок = "Далее";
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьПодразделениеНСС(мПодразделение)
	
	Если ЗначениеЗаполнено(мПодразделение.Родитель) Тогда
		Возврат ПолучитьПодразделениеНСС(мПодразделение.Родитель);
	Иначе
		Возврат мПодразделение;
	КонецЕсли; 		
	
КонецФункции

&НаКлиенте
Процедура УстиновитьОтборСпискаСобытий(мВидЗаписи)
	
	ДоступныеСобытия = мФормаДок.ПолучитьСписокСобытий(мВидЗаписи);
	События.Отбор.Элементы.Очистить();
	НовЭлемент = События.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовЭлемент.Использование  = Истина;
	НовЭлемент.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Ссылка");
	НовЭлемент.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
	НовЭлемент.ПравоеЗначение = ДоступныеСобытия;
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьЭлементыОтбопа(Источник, Приемник)
	
	Для Каждого Элемент Из Источник Цикл
		
		Если Не Элемент.Использование Тогда
			Продолжить;
		КонецЕсли;
		
		ТипЭлемента = ТипЗнч(Элемент);
		НовЭлемент = Приемник.Добавить(ТипЭлемента);
		СвойстваЭлемента = "";		
		СодержитЭлементы = Ложь;
		
		Если ТипЭлемента = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			СвойстваЭлемента = "ВидСравнения, Использование,ЛевоеЗначение, ПравоеЗначение";
		Иначе // Группа
			СвойстваЭлемента = "ТипГруппы, Использование";
			СодержитЭлементы = Истина;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(НовЭлемент, Элемент, СвойстваЭлемента);
		
		Если СодержитЭлементы Тогда
			СкопироватьЭлементыОтбопа(Источник.Элементы, Приемник.Элементы);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры


мСтриницы = Новый Массив;
мСтриницы.Добавить("ГруппаВыборВидиЗаписи");
мСтриницы.Добавить("ГруппаВыборСобытия");
мСтриницы.Добавить("ГруппаВыборОборудования");
мСтриницы.Добавить("ГруппаВыборСотрудников");
