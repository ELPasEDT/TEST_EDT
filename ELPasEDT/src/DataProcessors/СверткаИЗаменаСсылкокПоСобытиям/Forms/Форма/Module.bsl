
&НаСервере
Процедура ЗаполнитьДанныеНаСервере()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	События.ПометкаУдаления КАК ПометкаУдаления,
	|	События.Код КАК Код,
	|	События.Ссылка КАК Событие,
	|	События.Наименование КАК Наименование,
	|	События.Предопределенный КАК Предопределенный
	|ПОМЕСТИТЬ ВТ_Промежуточная
	|ИЗ
	|	Справочник.События КАК События
	|ГДЕ
	|	НЕ События.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Промежуточная.Код КАК Код,
	|	ВТ_Промежуточная.Событие КАК Событие,
	|	ВТ_Промежуточная.Наименование КАК Наименование,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_Промежуточная1.Событие) КАК Номер,
	|	ВТ_Промежуточная.Предопределенный КАК Предопределенный
	|ПОМЕСТИТЬ ВТ_Подзапрос
	|ИЗ
	|	ВТ_Промежуточная КАК ВТ_Промежуточная
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Промежуточная КАК ВТ_Промежуточная1
	|		ПО ВТ_Промежуточная.Наименование = ВТ_Промежуточная1.Наименование
	|			И ВТ_Промежуточная.Событие >= ВТ_Промежуточная1.Событие
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Промежуточная.Код,
	|	ВТ_Промежуточная.Событие,
	|	ВТ_Промежуточная.Наименование,
	|	ВТ_Промежуточная.Предопределенный
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Подзапрос.Код КАК Код,
	|	ВТ_Подзапрос.Событие КАК Событие,
	|	ВТ_Подзапрос.Наименование КАК Наименование,
	|	ВТ_Подзапрос.Номер КАК Номер,
	|	ВТ_Подзапрос.Предопределенный КАК Предопределенный
	|ИЗ
	|	ВТ_Подзапрос КАК ВТ_Подзапрос
	|%ДопУсловие%
	|УПОРЯДОЧИТЬ ПО
	|	Наименование,
	|	Номер";
	
	ЗапросВсеСобытия = Новый Запрос;	
	ЗапросВсеСобытия.Текст = СтрЗаменить(ТекстЗапроса, "%ДопУсловие%", "");
	Объект.ВсеСобытия.Загрузить(ЗапросВсеСобытия.Выполнить().Выгрузить());
	
	ЗапросОсновныеСобытия = Новый Запрос;
	ЗапросОсновныеСобытия.Текст = СтрЗаменить(ТекстЗапроса, "%ДопУсловие%", "ГДЕ ВТ_Подзапрос.Номер = 1");
	Объект.ОсновныеСобытия.Загрузить(ЗапросОсновныеСобытия.Выполнить().Выгрузить());
	
	ЗапросСобытияКЗамене = Новый Запрос;
	ЗапросСобытияКЗамене.Текст = СтрЗаменить(ТекстЗапроса, "%ДопУсловие%", "ГДЕ ВТ_Подзапрос.Номер > 1");
	Объект.СобытияКЗамене.Загрузить(ЗапросСобытияКЗамене.Выполнить().Выгрузить()); 
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДанные(Команда)
	ЗаполнитьДанныеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗаменуСсылокНаСервере()
	
	НачатьТранзакцию();
	
	Для Каждого ТекСтр Из Объект.ОсновныеСобытия Цикл
		СтрокиОтбора = Объект.СобытияКЗамене.НайтиСтроки(Новый Структура("Наименование", ТекСтр.Наименование));
		Если СтрокиОтбора.Количество() > 0 Тогда
			мСсылки = Новый Массив;
			Для Каждого НайденнаяСтрока Из СтрокиОтбора Цикл
				мСсылки.Добавить(НайденнаяСтрока.Событие);
			КонецЦикла;
		Иначе
			Продолжить;
		КонецЕсли;
		НайденныеСсылки = НайтиПоСсылкам(мСсылки);
		ОсновноеСобытие = ТекСтр.Событие;	
		Если НайденныеСсылки.Количество() > 0 Тогда
			ЗаменаСсылокМетаданные(ОсновноеСобытие, НайденныеСсылки);
		КонецЕсли;
	КонецЦикла; 	
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

&НаСервере
Процедура ЗаменаСсылокМетаданные(ОсновноеСобытие, НайденныеСсылки)
	
	Для Каждого Найденная Из НайденныеСсылки Цикл
		
		//Документы и Справочники
		Если Метаданные.Документы.Содержит(Найденная.Метаданные)
			Или Метаданные.Справочники.Содержит(Найденная.Метаданные) Тогда
			
			ОбъектДанных = Найденная.Данные.ПолучитьОбъект();
			
			//Универсальный
			//Для Каждого Рекв Из Найденная.Метаданные.Реквизиты Цикл
			//	Если ОбъектДанных[Рекв.Имя] = Найденная.Ссылка Тогда
			//		ОбъектДанных[Рекв.Имя] = ОсновноеСобытие;
			//	КонецЕсли;
			//КонецЦикла;
			Для Каждого Рекв Из Найденная.Метаданные.Реквизиты Цикл
				Если Рекв.Имя = "Событие" Тогда
					ОбъектДанных[Рекв.Имя] = ОсновноеСобытие;
				КонецЕсли;
			КонецЦикла;
			
			Если ТипЗнч(ОбъектДанных) = Тип("СправочникОбъект.ВидыЗаписей") Тогда
				ОбъектДанных["УдалитьСобытиеПоУмолчанию"] = ОсновноеСобытие;
			КонецЕсли;
			
			Если ТипЗнч(ОбъектДанных) = Тип("СправочникОбъект.События") Тогда
				Если ВРЕГ(СокрЛП(ОбъектДанных["СобытиеВЖурналеНСС"].Наименование)) = ВРЕГ(СокрЛП(ОсновноеСобытие.Наименование)) Тогда
					ОбъектДанных["СобытиеВЖурналеНСС"] = ОсновноеСобытие;
				КонецЕсли;
				Если ВРЕГ(СокрЛП(ОбъектДанных["СсылкаДляИзменения"].Наименование)) = ВРЕГ(СокрЛП(ОсновноеСобытие.Наименование)) Тогда
					ОбъектДанных["СсылкаДляИзменения"] = ОсновноеСобытие;
				КонецЕсли;
			КонецЕсли;
			
			Для Каждого ТЧ Из Найденная.Метаданные.ТабличныеЧасти Цикл					
				Для Каждого Рекв ИЗ ТЧ.Реквизиты Цикл 						
					Для Каждого СтрТЧ Из ОбъектДанных[ТЧ.Имя] Цикл
						Если СтрТЧ[Рекв.Имя] = Найденная.Ссылка Тогда
							СтрТЧ[Рекв.Имя] = ОсновноеСобытие;
						КонецЕсли;
					КонецЦикла;						
				КонецЦикла; 					
			КонецЦикла;
			
			//ОбъектДанных.ОбменДанными.Загрузка = Истина;
			//Попытка
				ОбъектДанных.Записать();
			//Исключение
			//	Сообщить("Проблема с объектом " + ОбъектДанных);
			//КонецПопытки; 			
			
			//Регистры сведений	
		ИначеЕсли Метаданные.РегистрыСведений.Содержит(Найденная.Метаданные) Тогда
			
			Набор = РегистрыСведений[Найденная.Метаданные.Имя].СоздатьНаборЗаписей();
			Если ТипЗнч(Набор) = Тип("РегистрСведенийНаборЗаписей.Заявки") Тогда
				Набор.Отбор["Ссылка"].Установить(Найденная.Данные["Ссылка"], Истина);
			ИначеЕсли ТипЗнч(Набор) = Тип("РегистрСведенийНаборЗаписей.ШаблоныТекстаЗаписейОЖ") Тогда
				Набор.Отбор["Событие"].Установить(Найденная.Данные["Событие"], Истина);
			КонецЕсли;
			Набор.Прочитать();
			Набор.Очистить();
			//Набор.ОбменДанными.Загрузка = Истина;
			Попытка
				Набор.Записать();
			Исключение
				Сообщить("Проблема с набором данных " + Набор);
			КонецПопытки;
			
			//Универсальный
			//Набор = РегистрыСведений[Найденная.Метаданные.Имя].СоздатьНаборЗаписей();
			//
			//Если Найденная.Метаданные.РежимЗаписи = Метаданные.СвойстваОбъектов.РежимЗаписиРегистра.ПодчинениеРегистратору Тогда
			//	Набор.Отбор.Регистратор.Установить(Найденная.Данные.Регистратор, Истина);
			//	Набор.Отбор.НомерСтроки.Установить(Найденная.Данные.НомерСтроки, Истина);
			//Иначе
			//	Для Каждого Измер Из Найденная.Метаданные.Измерения Цикл
			//		Набор.Отбор[Измер.Имя].Установить(Найденная.Данные[Измер.Имя], Истина)
			//	КонецЦикла;
			//	Если Найденная.Метаданные.ПериодичностьРегистраСведений <> Метаданные.СвойстваОбъектов.ПериодичностьРегистраСведений.Непериодический Тогда
			//		Набор.Отбор.Период.Установить(Найденная.Данные.Период, Истина);
			//	КонецЕсли;
			//КонецЕсли;
			//
			//Набор.Прочитать();
			//
			//Для Каждого ПолеТаб Из Найденная.Метаданные.Измерения Цикл
			//	Для Каждого Запись Из Набор Цикл
			//		Если Запись[ПолеТаб.Имя] = Найденная.Ссылка Тогда
			//			Запись[ПолеТаб.Имя] = ОсновноеСобытие;
			//		КонецЕсли;;
			//	КонецЦикла;
			//КонецЦикла;
			//
			//Для Каждого ПолеТаб Из Найденная.Метаданные.Ресурсы Цикл
			//	Для Каждого Запись Из Набор Цикл
			//		Если Запись[ПолеТаб.Имя] = Найденная.Ссылка Тогда
			//			Запись[ПолеТаб.Имя] = ОсновноеСобытие;
			//		КонецЕсли;;
			//	КонецЦикла;
			//КонецЦикла;
			//
			//Для Каждого ПолеТаб Из Найденная.Метаданные.Реквизиты Цикл
			//	Для Каждого Запись Из Набор Цикл
			//		Если Запись[ПолеТаб.Имя] = Найденная.Ссылка Тогда
			//			Запись[ПолеТаб.Имя] = ОсновноеСобытие;
			//		КонецЕсли;;
			//	КонецЦикла;
			//КонецЦикла;
			//
			//Набор.ОбменДанными.Загрузка = Истина;
			//Попытка
			//	Набор.Записать();
			//Исключение
			//	Сообщить("Проблема с набором данных " + Набор);
			//КонецПопытки;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры 

&НаКлиенте
Процедура ВыполнитьЗаменуСсылок(Команда)
	ВыполнитьЗаменуСсылокНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПометитьНаУдалениеЛишниеСобытияНаСервере()
	
	Для Каждого ТекСтр Из Объект.СобытияКЗамене Цикл
		ТекОбъект = ТекСтр.Событие.ПолучитьОбъект();
		ТекОбъект.ПометкаУдаления = Истина;
		Попытка
			ТекОбъект.Записать();
		Исключение
			Сообщить("Проблема с элементом " + ТекСтр.Событие + ", номер строки: " + ТекСтр.НомерСтроки);
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПометитьНаУдалениеЛишниеСобытия(Команда)
	ПометитьНаУдалениеЛишниеСобытияНаСервере();
	ПоказатьПредупреждение(, "Теперь нужно запустить Удаление помеченных объектов!!");
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	События.Ссылка КАК Событие,
		|	События.Код КАК Код
		|ИЗ
		|	Справочник.События КАК События
		|ГДЕ
		|	События.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	События.Наименование";
	
	Объект.СобытияКорректировки.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаменитьСсылкиНаСервере()
	
	НачатьТранзакцию();
	
	Для Каждого ТекСтр Из Объект.СобытияКорректировки Цикл 
		//ЗаменитьСобытиеОЖ(ТекСтр.Событие, ТекСтр.СобытиеОсновное)
		мСсылки = Новый Массив;
		мСсылки.Добавить(ТекСтр.Событие);
		НайденныеСсылки = НайтиПоСсылкам(мСсылки);
		Если НайденныеСсылки.Количество() > 0 Тогда
			ЗаменаСсылокМетаданные(ТекСтр.СобытиеОсновное, НайденныеСсылки);
		КонецЕсли;
	КонецЦикла; 	
	
	ЗафиксироватьТранзакцию();  
	
КонецПроцедуры

&НаСервере
Процедура ЗаменитьСобытиеОЖ(СобытиеПоиска, СобытиеЗамены)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОперативныйЖурнал.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ОперативныйЖурнал КАК ОперативныйЖурнал
		|ГДЕ
		|	ОперативныйЖурнал.Событие = &Событие";
	
	Запрос.УстановитьПараметр("Событие", СобытиеПоиска);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		ДокОбъект = Результат.Ссылка.ПолучитьОбъект();
		ДокОбъект.Событие = СобытиеЗамены;
		Попытка
			ДокОбъект.Записать();
			Сообщить("Успешно " + ДокОбъект);
		Исключение
			Сообщить("Проблема с документом " + ДокОбъект);
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаменитьСсылки(Команда)
	ЗаменитьСсылкиНаСервере();
	ПоказатьПредупреждение(, "Теперь нужно запустить Удаление помеченных объектов!!");
КонецПроцедуры

&НаСервере
Процедура ПодобратьПоНаименованиюНаСервере()
	
	Для Каждого ТекСтрока Из Объект.СобытияКорректировки Цикл
		ЗаполнитьСобытиеОсновное(ТекСтрока);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьСобытиеОсновное(ТекСтрока)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	События.Ссылка КАК Ссылка,
		|	События.Код КАК Код
		|ИЗ
		|	Справочник.События КАК События
		|ГДЕ
		|	НЕ События.ПометкаУдаления
		|	И События.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Наименование", ТекСтрока.Событие.Наименование);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		ТекСтрока.СобытиеОсновное = Результат.Ссылка;
		ТекСтрока.КодОсновногоСобытия = Результат.Код;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ПодобратьПоНаименованию(Команда)
	ПодобратьПоНаименованиюНаСервере();
КонецПроцедуры






























