
////////////////////////////////////////////////////////////////////////////////
// API

Процедура ПриСозданииФормы(Форма, Отказ, СтандартнаяОбработка) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	СостояниеЗаполнения = ПолучитьСостояниеЗаполненияОборудования(Форма.Объект.Ссылка, Форма.Объект.ВидОборудования);
	ОбновитьИндикациюВФорме(Форма, СостояниеЗаполнения);
	
КонецПроцедуры

Процедура ПослеЗаписиВФорме(Форма) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ЗначениеЗаполнено(Форма.Объект.ВидОборудования) Тогда
		СостояниеЗаполнения = ОбновитьСостояниеЗаполнения(Форма.Объект.Ссылка, Форма.Объект.ВидОборудования);
		ОбновитьИндикациюВФорме(Форма, СостояниеЗаполнения);
	Иначе
		ОчиститьРегистрКонтроляВводаДанных(Форма.Объект.Ссылка)
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ОбновитьИндикациюВФорме(Форма, СостояниеЗаполнения)
	
	Если СостояниеЗаполнения.Реквизиты Тогда
		Форма.Элементы.ГруппаОсновные.Картинка = БиблиотекаКартинок.Успешно
	Иначе
		Форма.Элементы.ГруппаОсновные.Картинка = БиблиотекаКартинок.ФорматПустой
	КонецЕсли;
	
	Если СостояниеЗаполнения.Паспорт Тогда
		Форма.Элементы.ГруппаПаспортОборудования.Картинка = БиблиотекаКартинок.Успешно
	Иначе
		Форма.Элементы.ГруппаПаспортОборудования.Картинка = БиблиотекаКартинок.ФорматПустой
	КонецЕсли;
	
	Если СостояниеЗаполнения.Ответственный Тогда
		Форма.Элементы.ГруппаОтветственныеЛица.Картинка = БиблиотекаКартинок.Успешно
	Иначе
		Форма.Элементы.ГруппаОтветственныеЛица.Картинка = БиблиотекаКартинок.ФорматПустой
	КонецЕсли;
	
КонецПроцедуры

Функция ОбновитьСостояниеЗаполнения(Ссылка, ВидОборудования, Период = '00010101') Экспорт
	
	СостояниеЗаполнения = ПолучитьСостояниеЗаполненияОборудования(Ссылка, ВидОборудования);
	
	Заполнено = Истина;
	
	Для Каждого Элемент Из СостояниеЗаполнения Цикл
		
		ТекСостояние = ТекущееСостояниеЗаполненияОборудования(Ссылка, Элемент.Ключ, Период);
		
		Если ТекСостояние <> Элемент.Значение Тогда
		
			МенеджерЗаписи = РегистрыСведений.КонтрольВводаДанных.СоздатьМенеджерЗаписи();
			Если ЗначениеЗаполнено(Период) Тогда
				МенеджерЗаписи.Период = Период;
			Иначе
				МенеджерЗаписи.Период = ТекущаяДатаСеанса();
			КонецЕсли;
			МенеджерЗаписи.Объект = Ссылка;
			МенеджерЗаписи.Разделитель1 = Элемент.Ключ;
			МенеджерЗаписи.Заполнен = Элемент.Значение;
			
			Если Не МенеджерЗаписи.Заполнен Тогда
				Заполнено =Ложь;
			КонецЕсли;
			
			МенеджерЗаписи.Записать();
			
		ИначеЕсли ТекСостояние = Ложь Тогда	
			Заполнено =Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
	ТекСостояние = ТекущееСостояниеЗаполненияОборудования(Ссылка,, Период);
	
	Если ТекСостояние <> Заполнено Тогда
		МенеджерЗаписи = РегистрыСведений.КонтрольВводаДанных.СоздатьМенеджерЗаписи();
		Если ЗначениеЗаполнено(Период) Тогда
			МенеджерЗаписи.Период = Период;
		Иначе
			МенеджерЗаписи.Период = ТекущаяДатаСеанса();
		КонецЕсли;
		МенеджерЗаписи.Объект = Ссылка;
		МенеджерЗаписи.Разделитель1 = "";
		МенеджерЗаписи.Заполнен = Заполнено;
		МенеджерЗаписи.Записать();
	КонецЕсли;
	
	Возврат СостояниеЗаполнения;
	
КонецФункции

Функция ТекущееСостояниеЗаполненияОборудования(Объект, Разделитель = "", Период = '00010101')
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КонтрольВводаДанныхСрезПоследних.Заполнен КАК Заполнен
	|ИЗ
	|	РегистрСведений.КонтрольВводаДанных.СрезПоследних(
	|			&Период,
	|			Объект = &Объект
	|				И Разделитель1 = &Разделитель1) КАК КонтрольВводаДанныхСрезПоследних");
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("Объект", Объект);
	Запрос.УстановитьПараметр("Разделитель1", Разделитель);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Заполнен;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Процедура ОчиститьРегистрКонтроляВводаДанных(СсылкаНаОбъект)
	
	НаборЗаписей = РегистрыСведений.КонтрольВводаДанных.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(СсылкаНаОбъект, Истина);
	НаборЗаписей.Записать();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБОРУДОВАНИЕ

Функция ПолучитьСостояниеЗаполненияОборудования(Ссылка, ВидОборудования)
	
	ПараметрыКонтроля = Новый Структура;
	
	///////////////////////////////////////////////////////////////////////////////
	// Заполнение реквизитов справочника
	ПараметрыКонтроля.Вставить("Реквизиты", Истина);
	ИменаПроверяемыхРеквизитов = Новый Массив;
	ИменаПроверяемыхРеквизитов.Добавить("ДиспетчерскоеНаименование");
	ИменаПроверяемыхРеквизитов.Добавить("ДатаВводаВЭксплуатацию");
	ИменаПроверяемыхРеквизитов.Добавить("Марка");
	ИменаПроверяемыхРеквизитов.Добавить("ЗаводИзготовитель");
	ИменаПроверяемыхРеквизитов.Добавить("Подразделение");
	Для Каждого Имя Из ИменаПроверяемыхРеквизитов Цикл
		Если Не  ЗначениеЗаполнено(Ссылка[Имя]) Тогда
			ПараметрыКонтроля.Реквизиты = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	///////////////////////////////////////////////////////////////////////////////
	// Заполнение паспорта
	ПараметрыКонтроля.Вставить("Паспорт", Ложь);
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ВидыОборудованияРеквизитыПаспорта.Реквизит ССЫЛКА ПланВидовХарактеристик.РеквизитыПаспортовОборудования
	|			ТОГДА ВидыОборудованияРеквизитыПаспорта.Реквизит
	|		ИНАЧЕ ГруппыКолонокПаспортаРеквизитыГруппы.Реквизит
	|	КОНЕЦ КАК Реквизит
	|ПОМЕСТИТЬ ВТ_РеквизитыПаспорта
	|ИЗ
	|	Справочник.ВидыОборудования.РеквизитыПаспорта КАК ВидыОборудованияРеквизитыПаспорта
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыКолонокПаспорта.РеквизитыГруппы КАК ГруппыКолонокПаспортаРеквизитыГруппы
	|		ПО ВидыОборудованияРеквизитыПаспорта.Реквизит = ГруппыКолонокПаспортаРеквизитыГруппы.Ссылка
	|ГДЕ
	|	ВидыОборудованияРеквизитыПаспорта.Ссылка = &ВидОборудования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗначенияРеквизитовПаспортов.Период КАК Период,
	|	ВТ_РеквизитыПаспорта.Реквизит КАК Реквизит,
	|	ЕСТЬNULL(ЗначенияРеквизитовПаспортов.Значение, """") КАК Значение,
	|	0 КАК Заполнено,
	|	1 КАК Количество
	|ИЗ
	|	ВТ_РеквизитыПаспорта КАК ВТ_РеквизитыПаспорта
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияРеквизитовПаспортов КАК ЗначенияРеквизитовПаспортов
	|		ПО ВТ_РеквизитыПаспорта.Реквизит = ЗначенияРеквизитовПаспортов.Реквизит
	|ГДЕ
	|	ЗначенияРеквизитовПаспортов.Объект = &Объект
	|	И ВЫБОР
	|			КОГДА ЗначенияРеквизитовПаспортов.НетДанных ЕСТЬ НЕ NULL 
	|				ТОГДА НЕ ЗначенияРеквизитовПаспортов.НетДанных
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ");
	Запрос.УстановитьПараметр("Объект", Ссылка);
	Запрос.УстановитьПараметр("ВидОборудования", ВидОборудования);
	Паспорт = Запрос.Выполнить().Выгрузить();
	Для Каждого Стр Из Паспорт Цикл
		Если ТипЗнч(Стр.Значение) = Тип("Строка") Тогда
			Стр.Заполнено = Число(Не ПустаяСтрока(Стр.Значение));
		Иначе
			Стр.Заполнено = Число(ЗначениеЗаполнено(Стр.Значение));
		КонецЕсли;
	КонецЦикла;
	
	Паспорт.Свернуть("Период", "Заполнено, Количество");
	Паспорт.Сортировать("Заполнено");
	Если Паспорт.Количество() > 0 Тогда
		ПараметрыКонтроля.Паспорт = 
			(?(Паспорт[0].Количество <> 0, Паспорт[0].Заполнено / Паспорт[0].Количество, 0)) >= 0.4;
	КонецЕсли;
	
	///////////////////////////////////////////////////////////////////////////////
	// Заполнение ответственных
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1 КАК Поле1
	|ИЗ
	|	РегистрСведений.ОборудованиеОтветственныеЛица КАК ОборудованиеОтветственныеЛица
	|ГДЕ
	|	ОборудованиеОтветственныеЛица.Оборудование = &Объект";
	Результат = Запрос.Выполнить();
	ПараметрыКонтроля.Вставить("Ответственный", Не Результат.Пустой());
	
	Возврат ПараметрыКонтроля;
	
КонецФункции

