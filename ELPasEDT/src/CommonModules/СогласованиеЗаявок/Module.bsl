
Процедура СогласованиеПередЗаписью(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.ЭтоНовый() Тогда
		Возврат;
	КонецЕсли;
	
	УтверждениеИзмененного = 
		(ЗначениеЗаполнено(Источник.СсылкаДляИзменения) 
		И Источник.Статус <> Источник.Ссылка.Статус
		И
			(
				Источник.Статус = Перечисления.СтатусыЗаявокСокращенный.Утверждена
				Или Источник.Статус = Перечисления.СтатусыЗаявок.Утверждена
			)
		);
	
	Если Не РольДоступна("ПолныеПрава") Тогда
		ПроверитьВозможностьИзмененияСтатуса(Источник, Отказ);
	КонецЕсли;
	
	Если УтверждениеИзмененного Тогда
		ВыполнеитьДействияПриУтверждении(Источник, Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьВозможностьИзмененияСтатуса(Источник, Отказ)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекСтатус    = Источник.Статус;
	ПредСтатус   = Источник.Ссылка.Статус;
	ТипИсточника = ТипЗнч(Источник);
	
	Если ТекСтатус = ПредСтатус     // редактирование
				И                       
				(ТекСтатус = Перечисления.СтатусыЗаявок.НаРассмотрении
					Или ТекСтатус = Перечисления.СтатусыЗаявокСокращенный.НаРассмотрении
				)
			Тогда
		Возврат;
	КонецЕсли;
	
	ТекстУсловияПоКатегориям = 
		"				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиСогласованияЗаявок.ДоступныеКатегорииВидовОборудования КАК НастройкиСогласованияЗаявокДоступныеКатегорииВидовОборудования
		|				ПО НастройкиСогласованияЗаявокСтатусыЗаявок.Ссылка = НастройкиСогласованияЗаявокДоступныеКатегорииВидовОборудования.Ссылка
		|					И (НастройкиСогласованияЗаявокДоступныеКатегорииВидовОборудования.Категория = &Категория)";
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ГруппыПользователейСостав.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_ГруппыПользователя
		|ИЗ
		|	Справочник.ГруппыПользователей.Состав КАК ГруппыПользователейСостав
		|ГДЕ
		|	ГруппыПользователейСостав.Пользователь = &Пользователь
		|	И НЕ ГруппыПользователейСостав.Ссылка.ПометкаУдаления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	1 КАК Поле1
		|ИЗ
		|	РегистрСведений.Заявки КАК Заявки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиСогласованияЗаявок.ДоступныеОрганизации КАК НастройкиСогласованияЗаявокДоступныеОрганизации
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиСогласованияЗаявок.СтатусыЗаявок КАК НастройкиСогласованияЗаявокСтатусыЗаявок
		|%1
		|			ПО НастройкиСогласованияЗаявокДоступныеОрганизации.Ссылка = НастройкиСогласованияЗаявокСтатусыЗаявок.Ссылка
		|				И (НастройкиСогласованияЗаявокСтатусыЗаявок.НачальныйСтатус = &НачальныйСтатус)
		|				И (НастройкиСогласованияЗаявокСтатусыЗаявок.КонечныйСтатус = &КонечныйСтатус)
		|		ПО Заявки.Организация = НастройкиСогласованияЗаявокДоступныеОрганизации.Организация
		|			И (Заявки.Ссылка = &Ссылка)
		|ГДЕ
		|	ВЫБОР
		|			КОГДА НастройкиСогласованияЗаявокДоступныеОрганизации.Ссылка.Пользователь ССЫЛКА Справочник.Пользователи
		|				ТОГДА НастройкиСогласованияЗаявокДоступныеОрганизации.Ссылка.Пользователь = &Пользователь
		|			ИНАЧЕ НастройкиСогласованияЗаявокДоступныеОрганизации.Ссылка.Пользователь В
		|					(ВЫБРАТЬ
		|						ВТ_ГруппыПользователя.Ссылка КАК Ссылка
		|					ИЗ
		|						ВТ_ГруппыПользователя КАК ВТ_ГруппыПользователя)
		|		КОНЕЦ";
	
	ЕстьКатегория = (ТипИсточника = Тип("СправочникОбъект.ВидыОборудования"));
	ТекстЗапроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗапроса, ?(ЕстьКатегория, ТекстУсловияПоКатегориям, ""));
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("НачальныйСтатус", ПредСтатус);
	Запрос.УстановитьПараметр("КонечныйСтатус", ТекСтатус);
	Запрос.УстановитьПараметр("Ссылка", Источник.Ссылка);
	Запрос.УстановитьПараметр("Пользователь", ПользователиКлиентСервер.ТекущийПользователь());
	Если ЕстьКатегория Тогда
		Запрос.УстановитьПараметр("Категория", Источник.Категория);
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		
		ТекстСообщения    = "Нет прав на изменение статуса с ""%1"" на ""%2"" %3%4.";
		ДопТекстСообщения = "";
		Категория         = "";
		
		Если ЕстьКатегория Тогда
			ДопТекстСообщения = " или на работу с видампи оборудования категории ";
			Категория         = Источник.Категория;
		КонецЕсли;
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ТекстСообщения, ПредСтатус, ТекСтатус, ДопТекстСообщения,Категория);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,, Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнеитьДействияПриУтверждении(Источник, Отказ)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// Заполним исходрный объеект данными заявки.
	
	ОбъектНаИзменение = Источник.СсылкаДляИзменения.ПолучитьОбъект();
	
	ИменаРеквизитов = Новый Массив;
	ИменаТабЧастей  = Новый Массив;
	
	ТипОбъекта = ТипЗнч(Источник);
	
	Если ТипОбъекта = Тип("СправочникОбъект.ВидыОборудования") Тогда
		
		ИменаРеквизитов.Добавить("Наименование");
		ИменаРеквизитов.Добавить("КодSAP");
		ИменаРеквизитов.Добавить("Комментарий");
		ИменаРеквизитов.Добавить("Родитель");
		
		ИменаТабЧастей.Добавить("РеквизитыПаспорта");
		
	ИначеЕсли ТипОбъекта = Тип("СправочникОбъект.ЗаводыИзготовители") Тогда
		
		ИменаРеквизитов.Добавить("Наименование");
		ИменаРеквизитов.Добавить("НаименованиеПолное");
		ИменаРеквизитов.Добавить("НаименованиеДополнительное");
		ИменаРеквизитов.Добавить("Комментарий");
		
	ИначеЕсли ТипОбъекта = Тип("СправочникОбъект.МаркиОборудования") Тогда
		
		ИменаРеквизитов.Добавить("Наименование");
		ИменаРеквизитов.Добавить("ВидОборудования");
		
	ИначеЕсли ТипОбъекта = Тип("СправочникОбъект.КлассификаторЕдиницИзмерения") Тогда
		
		ИменаРеквизитов.Добавить("Наименование");
		ИменаРеквизитов.Добавить("НаименованиеПолное");
		ИменаРеквизитов.Добавить("МеждународноеСокращение");
		
	ИначеЕсли ТипОбъекта = Тип("СправочникОбъект.События") Тогда
		
		ИменаРеквизитов.Добавить("Наименование");
		ИменаРеквизитов.Добавить("ОповещениеНСС");
		ИменаРеквизитов.Добавить("СобытиеВЖурналеНСС");
		//ИменаРеквизитов.Добавить("Организация");
		
	КонецЕсли;
	
	Если ИменаРеквизитов.Количество() = 0 И ИменаТабЧастей.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Имя Из ИменаРеквизитов Цикл
		ОбъектНаИзменение[Имя] = Источник[Имя];
	КонецЦикла;

	Для Каждого Имя из ИменаТабЧастей Цикл
		ОбъектНаИзменение[Имя].Очистить();
		ОбъектНаИзменение[Имя].Загрузить(Источник[Имя].Выгрузить());
	КонецЦикла;
	
	ОбъектНаИзменение.ОбменДанными.Загрузка      = Истина;	
	ОбъектНаИзменение.Записать();
	
	Источник.ПометкаУдаления = Истина;
			
КонецПроцедуры

Процедура СогласованиеПриЗаписи(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Ссылка    = Источник.Ссылка;
	ТекСтатус = Источник.Статус;
	
	Если ТекСтатус = Перечисления.СтатусыЗаявок.НаРассмотрении
		Или ТекСтатус = Перечисления.СтатусыЗаявокСокращенный.НаРассмотрении Тогда
		
		ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	
		Если ЗначениеЗаполнено(ТекущийПользователь.Подразделение) И ЗначениеЗаполнено(ТекущийПользователь.Подразделение.Организация) Тогда
			МенеджерЗаписи = РегистрыСведений.Заявки.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Ссылка = Ссылка;
			МенеджерЗаписи.Прочитать();
			Если Не МенеджерЗаписи.Выбран() Тогда
				МенеджерЗаписи.Ссылка = Ссылка;
				МенеджерЗаписи.Организация = ТекущийПользователь.Подразделение.Организация;
				МенеджерЗаписи.Записать();
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ТекСтатус = Перечисления.СтатусыЗаявок.Отклонена
		Или ТекСтатус = Перечисления.СтатусыЗаявок.Утверждена
		Или ТекСтатус = Перечисления.СтатусыЗаявокСокращенный.Отклонена
		Или ТекСтатус = Перечисления.СтатусыЗаявокСокращенный.Утверждена Тогда
		
		МенеджерЗаписи = РегистрыСведений.Заявки.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Ссылка = Ссылка;
		МенеджерЗаписи.Прочитать();
		Если МенеджерЗаписи.Выбран() Тогда
			МенеджерЗаписи.Удалить();
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

