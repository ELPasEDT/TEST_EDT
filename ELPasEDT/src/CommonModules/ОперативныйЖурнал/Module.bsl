
Процедура СформироватьКарточкуЗаписиОперативногоЖурналаПередЗаписью(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	возврат;
	
	ИмяФайла = "КарточкаЗаписи";
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ОперативныйЖурналПрисоединенныеФайлы.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ОперативныйЖурналПрисоединенныеФайлы КАК ОперативныйЖурналПрисоединенныеФайлы
	|ГДЕ
	|	НЕ ОперативныйЖурналПрисоединенныеФайлы.ПометкаУдаления
	|	И ОперативныйЖурналПрисоединенныеФайлы.Наименование = &Наименование
	|	И ОперативныйЖурналПрисоединенныеФайлы.ВладелецФайла = &ВладелецФайла");
	Запрос.УстановитьПараметр("Наименование", ИмяФайла);
	Запрос.УстановитьПараметр("ВладелецФайла", Источник.Ссылка);
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ОбъектыПечати = Новый Массив;
	ОбъектыПечати.Добавить(Источник.Ссылка);
	
	ТабДок = Документы.ОперативныйЖурнал.ПечатьКарточкиЗаписи(ОбъектыПечати, Неопределено);
	
	ИмяКаталога = ПолучитьИмяВременногоФайла();
	СоздатьКаталог(ИмяКаталога);
	ПолноеИмяФайла = ИмяКаталога + "\" + ИмяФайла + ".mxl";
	
	ТабДок.Записать(ПолноеИмяФайла);
	
	РаботаСФайлами.СоздатьФайлНаОсновеФайлаНаДиске(Источник.Ссылка, ПолноеИмяФайла);
	
	УдалитьФайлы(ПолноеИмяФайла);
	УдалитьФайлы(ИмяКаталога);
	
КонецПроцедуры

Функция ПолучитьСоставСмены(Период, Подразделение, Вахта) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СотрудникиПоВахтамСрезПоследних.Сотрудник КАК Сотрудник,
	|	СотрудникиПоВахтамСрезПоследних.СтаршийСмены КАК СтаршийСмены
	|ИЗ
	|	РегистрСведений.СотрудникиПоВахтам.СрезПоследних(
	|			&Период,
	|			Подразделение = &Подразделение
	|				И Вахта = &Вахта
	|				И НЕ Сотрудник.Уволен) КАК СотрудникиПоВахтамСрезПоследних");
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("Вахта", Вахта);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ПолучитьЗначениеПоКлючу(ЗначениеКлюча, ЗначениеПоУмолчанию = Неопределено) Экспорт 

	ТекЗначение = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФлагиИСвойства.Значение КАК Значение
		|ИЗ
		|	РегистрСведений.ФлагиИСвойства КАК ФлагиИСвойства
		|ГДЕ
		|	ФлагиИСвойства.ИмяСвойства = &ЗначениеКлюча";
	
	Запрос.УстановитьПараметр("ЗначениеКлюча", ЗначениеКлюча);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда 
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		ТекЗначение = ВыборкаДетальныеЗаписи.Значение;	
	КонецЕсли;
	
	Если ТекЗначение = Неопределено И ЗначениеЗаполнено(ЗначениеПоУмолчанию) Тогда 
		
		ТекЗначение = ЗначениеПоУмолчанию;
		Набор = РегистрыСведений.ФлагиИСвойства.СоздатьНаборЗаписей();
		Набор.Отбор.ИмяСвойства.Установить(ЗначениеКлюча);
		Запись = Набор.Добавить();
		Запись.ИмяСвойства = ЗначениеКлюча;
		Запись.Значение = ЗначениеПоУмолчанию;
		Набор.Записать();
		
	КонецЕсли;
	
	Возврат ТекЗначение;

КонецФункции // ПолучитьЗначениеПоКлючу()

Процедура ПриСозданииНаСервере(ТекСсылка, Элементы, ТекОбъект) Экспорт 

	Если ТипЗнч(ТекСсылка) = Тип("ДокументСсылка.РапортНСС") Тогда 
		НастройкаВидимостиНСС(ТекСсылка, Элементы, ТекОбъект);		
	ИначеЕсли ТипЗнч(ТекСсылка) = Тип("ДокументСсылка.РапортНСКТЦ") Тогда 
		НастройкаВидимостиНСКТЦ(ТекСсылка, Элементы, ТекОбъект);	
	ИначеЕсли ТипЗнч(ТекСсылка) = Тип("ДокументСсылка.РапортКотлы") Тогда 
		НастройкаВидимостиКотлы(ТекСсылка, Элементы, ТекОбъект);	
	ИначеЕсли ТипЗнч(ТекСсылка) = Тип("ДокументСсылка.РапортТурбины") Тогда 
		НастройкаВидимостиТурбины(ТекСсылка, Элементы, ТекОбъект);	
	ИначеЕсли ТипЗнч(ТекСсылка) = Тип("ДокументСсылка.РапортТопливо") Тогда 
		НастройкаВидимостиТопливо(ТекСсылка, Элементы, ТекОбъект);	
	ИначеЕсли ТипЗнч(ТекСсылка) = Тип("ДокументСсылка.РапортТеплосетевоеОборудование") Тогда 
		НастройкаВидимостиТеплосетевоеОборудование(ТекСсылка, Элементы, ТекОбъект);	
	ИначеЕсли ТипЗнч(ТекСсылка) = Тип("ДокументСсылка.РапортМеханизмы") Тогда 
		НастройкаВидимостиМеханизмы(ТекСсылка, Элементы, ТекОбъект);	
	ИначеЕсли ТипЗнч(ТекСсылка) = Тип("ДокументСсылка.РапортГлавнаяСхема") Тогда 
		НастройкаВидимостиГлавнаяСхема(ТекСсылка, Элементы, ТекОбъект);			
	ИначеЕсли ТипЗнч(ТекСсылка) = Тип("ДокументСсылка.РапортХВО") Тогда 
		НастройкаВидимостиХВО(ТекСсылка, Элементы, ТекОбъект);	
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(ТекСсылка) Тогда
		ТекОбъект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
		ТекОбъект.Подразделение = ТекОбъект.Ответственный.Подразделение;
		Если ЗначениеЗаполнено(ТекОбъект.Подразделение) Тогда
			ТекОбъект.Организация = ПолучитьОрганизациюПользователя(ТекОбъект.Подразделение);
		Иначе
			ТекОбъект.Организация = Справочники.Организации.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // ПриСозданииНаСервере()

Функция ПолучитьОрганизациюПользователя(Подразделение) 	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Подразделения.Организация КАК Организация
		|ИЗ
		|	Справочник.Подразделения КАК Подразделения
		|ГДЕ
		|	Подразделения.Ссылка = &Подразделение
		|	И НЕ Подразделения.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		Возврат Результат.Организация;
	Иначе 
		Возврат Справочники.Организации.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

Функция ПолучитьСтруктуруОрганизаций() Экспорт 
	
	ИжевскаяТЭЦ1 = ПолучитьЗначениеПоКлючу("ИжевскаяТЭЦ1");
	ИжевскаяТЭЦ2 = ПолучитьЗначениеПоКлючу("ИжевскаяТЭЦ2");

	Возврат Новый Структура("ИжевскаяТЭЦ1, ИжевскаяТЭЦ2", ИжевскаяТЭЦ1, ИжевскаяТЭЦ2);
	
КонецФункции // ПолучитьСтруктуруОрганизаций()

Процедура НастройкаВидимостиНСС(ТекСсылка, Элементы, ТекОбъект)

	Структура 		= ПолучитьСтруктуруОрганизаций();
	ТекОрганизация 	= ТекОбъект.Организация;
	
	Если ТекОрганизация = Структура.ИжевскаяТЭЦ1 Тогда 
			
	ИначеЕсли ТекОрганизация = Структура.ИжевскаяТЭЦ2 Тогда 
		Элементы.УровеньНаВодозаборе.Видимость = Ложь;
	КонецЕсли;	

КонецПроцедуры // НастройкаВидимостиНСС()

Процедура НастройкаВидимостиНСКТЦ(ТекСсылка, Элементы, ТекОбъект)

	Структура 		= ПолучитьСтруктуруОрганизаций();
	ТекОрганизация 	= ТекОбъект.Организация;
	
	Если ТекОрганизация = Структура.ИжевскаяТЭЦ1 Тогда 
		Элементы.ТепловаяНагрузкаПар.Видимость = Ложь;
		Элементы.ТеплосетиЗначениеПоказателя3.Видимость = Ложь;
		Элементы.ТеплосетиЗначениеПоказателя4.Видимость = Ложь;
		Элементы.ОтпускПара.Видимость = Ложь;
		Элементы.ТемпераПара.Видимость = Ложь;
		Элементы.ДавлениеПара.Видимость = Ложь;
	ИначеЕсли ТекОрганизация = Структура.ИжевскаяТЭЦ2 Тогда 
		
	КонецЕсли;		

КонецПроцедуры // НастройкаВидимостиНСКТЦ()

Процедура НастройкаВидимостиКотлы(ТекСсылка, Элементы, ТекОбъект)

	Структура 		= ПолучитьСтруктуруОрганизаций();
	ТекОрганизация 	= ТекОбъект.Организация;
	
	Если ТекОрганизация = Структура.ИжевскаяТЭЦ1 Тогда 
		Элементы.ДанынеПоКотламЗначениеПоказателя6.Видимость = Ложь;		
	ИначеЕсли ТекОрганизация = Структура.ИжевскаяТЭЦ2 Тогда 
		
	КонецЕсли;		

КонецПроцедуры // НастройкаВидимостиКотлы()

Процедура НастройкаВидимостиТурбины(ТекСсылка, Элементы, ТекОбъект)

	Структура 		= ПолучитьСтруктуруОрганизаций();
	ТекОрганизация 	= ТекОбъект.Организация;
	
	Если ТекОрганизация = Структура.ИжевскаяТЭЦ1 Тогда
		Элементы.ДанынеПоТурбинамГруппаПГС.Видимость = Ложь;
	ИначеЕсли ТекОрганизация = Структура.ИжевскаяТЭЦ2 Тогда 
	КонецЕсли;		

КонецПроцедуры // НастройкаВидимостиТурбины()

Процедура НастройкаВидимостиТопливо(ТекСсылка, Элементы, ТекОбъект)

	Структура 		= ПолучитьСтруктуруОрганизаций();
	ТекОрганизация 	= ТекОбъект.Организация;
	
	Если ТекОрганизация = Структура.ИжевскаяТЭЦ1 Тогда 
		Элементы.УгольРасход.Видимость = Ложь;
		Элементы.УгольПриход.Видимость = Ложь;
		Элементы.УгольОстаток.Видимость = Ложь;
		Элементы.УгольНорматив.Видимость = Ложь;
	ИначеЕсли ТекОрганизация = Структура.ИжевскаяТЭЦ2 Тогда 
		
	КонецЕсли;		

КонецПроцедуры // НастройкаВидимостиТопливо()

Процедура НастройкаВидимостиТеплосетевоеОборудование(ТекСсылка, Элементы, ТекОбъект)

	Структура 		= ПолучитьСтруктуруОрганизаций();
	ТекОрганизация 	= ТекОбъект.Организация;
	
	Если ТекОрганизация = Структура.ИжевскаяТЭЦ2 Тогда 
		Элементы.ГруппаЗапасы1.Видимость = Истина;
		Элементы.ГруппаЗапасы2.Видимость = Ложь;
	ИначеЕсли ТекОрганизация = Структура.ИжевскаяТЭЦ1 Тогда 
		Элементы.ГруппаЗапасы1.Видимость = Ложь;
		Элементы.ГруппаЗапасы2.Видимость = Истина;
	КонецЕсли;		

КонецПроцедуры // НастройкаВидимостиТеплосетевоеОборудование()

Процедура НастройкаВидимостиМеханизмы(ТекСсылка, Элементы, ТекОбъект)

	Структура 		= ПолучитьСтруктуруОрганизаций();
	ТекОрганизация 	= ТекОбъект.Организация;
	
	Если ТекОрганизация = Структура.ИжевскаяТЭЦ1 Тогда 
	ИначеЕсли ТекОрганизация = Структура.ИжевскаяТЭЦ2 Тогда 
	КонецЕсли;		

КонецПроцедуры // НастройкаВидимостиМеханизмы()

Процедура НастройкаВидимостиГлавнаяСхема(ТекСсылка, Элементы, ТекОбъект)

	Структура 		= ПолучитьСтруктуруОрганизаций();
	ТекОрганизация 	= ТекОбъект.Организация;
	
	Если ТекОрганизация = Структура.ИжевскаяТЭЦ1 Тогда 
	ИначеЕсли ТекОрганизация = Структура.ИжевскаяТЭЦ2 Тогда 
	КонецЕсли;		

КонецПроцедуры // НастройкаВидимостиГлавнаяСхема()

Процедура НастройкаВидимостиХВО(ТекСсылка, Элементы, ТекОбъект)

	Структура 		= ПолучитьСтруктуруОрганизаций();
	ТекОрганизация 	= ТекОбъект.Организация;
	
	Если ТекОрганизация = Структура.ИжевскаяТЭЦ1 Тогда 
		//Элементы.УровеньВБакахКонденсата5.Видимость = Ложь;
		Элементы.УровеньВБАЗК5.Видимость = Ложь;
		//Элементы.УровеньВБакахКонденсата3.Видимость = Ложь;
		Элементы.УровеньВБАЗК1.Видимость = Ложь;
		Элементы.УровеньВБАЗК2.Видимость = Ложь;
		Элементы.УровеньВБАЗК3.Видимость = Ложь;
		Элементы.УровеньВБАЗК4.Видимость = Ложь;
		Элементы.УровеньВБАЗК5.Видимость = Ложь;
		Элементы.ГруппаРеквизиты.Видимость = Ложь;
		Элементы.ГруппаРасходВоды1.Видимость = Истина;
		Элементы.ГруппаРасходВоды2.Видимость = Ложь;
	ИначеЕсли ТекОрганизация = Структура.ИжевскаяТЭЦ2 Тогда 
		//Элементы.УровеньВБакахКонденсата5.Видимость = Ложь;
		Элементы.УровеньВБАЗК5.Видимость = Ложь;
		//Элементы.РасходВодыПодпиткаТСХВОПГУ.Видимость = Ложь;
		//Элементы.РасходВодыПодпиткаКотловХВОПГУ.Видимость = Ложь;
		Элементы.ГруппаРеквизиты.Видимость = Истина;
		Элементы.ГруппаРасходВоды1.Видимость = Ложь;
		Элементы.ГруппаРасходВоды2.Видимость = Истина;
	КонецЕсли;	

КонецПроцедуры // НастройкаВидимостиХВО()

Функция ПолучитьДатуПриемаСмены(СтаршийСмены) Экспорт 
	
	ДатаПриемаСмены = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	АктивныеСменыСрезПоследних.Период КАК Период,
		|	АктивныеСменыСрезПоследних.СменаОткрыта КАК СменаОткрыта
		|ИЗ
		|	РегистрСведений.АктивныеСмены.СрезПоследних(, СтаршийСмены = &СтаршийСмены) КАК АктивныеСменыСрезПоследних
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
	
	Запрос.УстановитьПараметр("СтаршийСмены", СтаршийСмены);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		Если Результат.СменаОткрыта Тогда
			ДатаПриемаСмены = Результат.Период;
		КонецЕсли;
	КонецЕсли;  
	
	Возврат ДатаПриемаСмены;
	
КонецФункции





















 