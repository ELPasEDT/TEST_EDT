
#Область ПрограммныйИнтерфейс

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Карточка записи
    КомандаПечати = КомандыПечати.Добавить();
    КомандаПечати.МенеджерПечати = "Документ.ОперативныйЖурнал";
    КомандаПечати.Идентификатор = "КарточкаЗаписи";
    КомандаПечати.Представление = НСтр("ru = 'Карточка записи'");
    КомандаПечати.ПроверкаПроведенияПередПечатью = Истина; 
	
КонецПроцедуры

#КонецОбласти

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов - Массив - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати - СписокЗначений - значение - ссылка на объект;
//                                            представление - имя области, в которой был выведен объект (выходной параметр);
//  ПараметрыВывода - Структура - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	НужноПечататьМакет = УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "КарточкаЗаписи");
    Если НужноПечататьМакет Тогда
        УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
        КоллекцияПечатныхФорм,
        "КарточкаЗаписи",
        НСтр("ru = 'Карточка записи'"),
        ПечатьКарточкиЗаписи(МассивОбъектов, ОбъектыПечати),
        ,
        "Документ.ОперативныйЖурнал.ПФ_MXL_КарточкаЗаписи");
    КонецЕсли;
	
КонецПроцедуры

Функция ПечатьКарточкиЗаписи(МассивОбъектов, ОбъектыПечати) Экспорт
	
	
	//Жолткевич
	ТабДок = Новый ТабличныйДокумент;
	
	Макет = Документы.ОперативныйЖурнал.ПолучитьМакет("ПечатьЗакрытиеСмены");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОперативныйЖурнал.Вахта КАК Вахта,
	|	ОперативныйЖурнал.ВидЗаписи КАК ВидЗаписи,
	|	ОперативныйЖурнал.Дата КАК Дата,
	|	ОперативныйЖурнал.ДатаНачалаСмены КАК ДатаНачалаСмены,
	|	ОперативныйЖурнал.ДатаОкончанияСмены КАК ДатаОкончанияСмены,
	|	ОперативныйЖурнал.ДатаСобытия КАК ДатаСобытия,
	|	ОперативныйЖурнал.ДокументЗакрытия КАК ДокументЗакрытия,
	|	ОперативныйЖурнал.Завершено КАК Завершено,
	|	ОперативныйЖурнал.ЗамечанияИРаспоряжения КАК ЗамечанияИРаспоряжения,
	|	ОперативныйЖурнал.ЗонаОтветственности КАК ЗонаОтветственности,
	|	ОперативныйЖурнал.Комментарий КАК Комментарий,
	|	ОперативныйЖурнал.Контролер КАК Контролер,
	|	ОперативныйЖурнал.Номер КАК Номер,
	|	ОперативныйЖурнал.Описание КАК Описание,
	|	ОперативныйЖурнал.Оповещение КАК Оповещение,
	|	ОперативныйЖурнал.Ответственный КАК Ответственный,
	|	ОперативныйЖурнал.Подразделение КАК Подразделение,
	|	ОперативныйЖурнал.ПолученоОт КАК ПолученоОт,
	|	ОперативныйЖурнал.Распоряжение КАК Распоряжение,
	|	ОперативныйЖурнал.Смена КАК Смена,
	|	ОперативныйЖурнал.СменаЗакрыта КАК СменаЗакрыта,
	|	ОперативныйЖурнал.СменаПрописью КАК СменаПрописью,
	|	ОперативныйЖурнал.Событие КАК Событие,
	|	ОперативныйЖурнал.СозданАвтоматически КАК СозданАвтоматически,
	|	ОперативныйЖурнал.СтаршийСмены КАК СтаршийСмены,
	|	ОперативныйЖурнал.Статус КАК Статус,
	|	ОперативныйЖурнал.СтатусОтданногоРаспоряжения КАК СтатусОтданногоРаспоряжения,
	|	ОперативныйЖурнал.СтрокаОборудования КАК СтрокаОборудования,
	|	ОперативныйЖурнал.СтрокаОборудованияДиспетчерское КАК СтрокаОборудованияДиспетчерское,
	|	ОперативныйЖурнал.Чистовик КАК Чистовик,
	|	ОперативныйЖурнал.ЭтоОтвет КАК ЭтоОтвет,
	|	ОперативныйЖурнал.ЭтоПерваяЗапись КАК ЭтоПерваяЗапись,
	|	ОперативныйЖурнал.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ОперативныйЖурнал КАК ОперативныйЖурнал
	|ГДЕ
	|	ОперативныйЖурнал.Ссылка В(&Ссылка)";
	
	Запрос.Параметры.Вставить("Ссылка", МассивОбъектов[0]);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	МассивВыводимыхОбластей = Новый Массив;
	
	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		
		СтрокаНСС = ?(Выборка.Ответственный.ФизическоеЛицо.НСС, "НСС ",?(Выборка.Ответственный.ФизическоеЛицо.НСЦ, "НСЦ ","") );
		ОбластьЗаголовок.Параметры.СменаЗаголовок =	 Строка(Формат(Выборка.Дата,"ДЛФ=Д"))+"  Подразделение:"+ Строка(Выборка.Подразделение)+"  Смена: "
													+ Строка(Выборка.Смена)+" ("+ Формат(Выборка.Смена.ВремяНачала,"ДЛФ=T")+"-"
													+Формат(Выборка.Смена.ВремяОкончания,"ДЛФ=T")+")  Ответственный:"+ СтрокаНСС + Строка(Выборка.Ответственный);
		НомерСтраницы=1;	
 		ОбластьЗаголовок.Параметры.ТекстНомерСтраницы = "Страница № " + Строка(НомерСтраницы);
		
		ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		ТабДок.АвтоМасштаб 	= Истина;	
		ТабДок.ПолеСлева		= 10;
		ТабДок.ПолеСправа	= 10;
		Масштаб=120;

		ТабДок.Вывести(ОбластьЗаголовок);
		
		СоставЗаголовок= Макет.ПолучитьОбласть("СоставЗаголовок");
		ТабДок.Вывести(СоставЗаголовок);
		СоставШапка= Макет.ПолучитьОбласть("СоставШапка");
		ТабДок.Вывести(СоставШапка);
		
		Состав= Макет.ПолучитьОбласть("Состав");
		Номер=1;
		Для Каждого Строка Из Выборка.Ссылка.Сотрудники  Цикл          // Формат(ИмяРеквизита,"ДЛФ=Д")
			Если Строка.Выбран тогда
				Состав.Параметры.Номер = Номер;
				Состав.Параметры.Сотрудник = Строка.Сотрудник;
				Состав.Параметры.Должность = Строка.Должность;
				Состав.Параметры.Подразделение = Строка.Подразделение;
				Состав.Параметры.ДатаПроверки = Формат(Строка.ДатаКонтроляЗнаний,"ДЛФ=Д");
				Состав.Параметры.НачалоРаботы = Формат(Строка.ВремяНачалаРаботы,"ДЛФ=T"); 
				Состав.Параметры.ОкончаниеРаботы = Формат(Строка.ВремяОкончанияРаботы,"ДЛФ=T");
				ТабДок.Вывести(Состав);
				Номер=Номер+1;
			КонецЕсли;	
		КонецЦикла;
		
		//чек лист
		ТЗпоказатели = "";
		ТЗчекЛист ="";
		
		ЗапросЧекЛист = Новый Запрос;
		ЗапросЧекЛист.Текст =
		"ВЫБРАТЬ
		|	ОперативныйЖурналЧекЛист.Показатель КАК Показатель,
		|	ОперативныйЖурналЧекЛист.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ОперативныйЖурналЧекЛист.Значение КАК ЗначениеПрием,
		|	НЕОПРЕДЕЛЕНО КАК ЗначениеСдача
		|ИЗ
		|	Документ.ОперативныйЖурнал.ЧекЛист КАК ОперативныйЖурналЧекЛист
		|ГДЕ
		|	ОперативныйЖурналЧекЛист.Ссылка.Смена = &Смена
		|	И ОперативныйЖурналЧекЛист.Ссылка.Вахта = &Вахта
		|	И ОперативныйЖурналЧекЛист.Ссылка.Подразделение = &Подразделение
		|	И ОперативныйЖурналЧекЛист.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
		|	И ОперативныйЖурналЧекЛист.Ссылка.ВидЗаписи = &ВидЗаписи
		|	И ОперативныйЖурналЧекЛист.Ссылка.Чистовик = ИСТИНА
		|	И ОперативныйЖурналЧекЛист.Ссылка.Событие = &Событие";
		
		ЗапросЧекЛист.Параметры.Вставить("Вахта", Выборка.Вахта);
		ЗапросЧекЛист.Параметры.Вставить("Смена", Выборка.Смена);
		ЗапросЧекЛист.Параметры.Вставить("Подразделение", Выборка.Подразделение);
		ЗапросЧекЛист.Параметры.Вставить("Дата1", Выборка.Дата-46800);  //документы за 13 часов
		ЗапросЧекЛист.Параметры.Вставить("Дата2", Выборка.Дата+3600);   //еще доп час
		ЗапросЧекЛист.Параметры.Вставить("ВидЗаписи", Справочники.ВидыЗаписей.ПередачаСмены);
		ЗапросЧекЛист.Параметры.Вставить("Событие", Справочники.События.СменуПринял);

	 	ТЗчекЛист = ЗапросЧекЛист.Выполнить().Выгрузить();

		Для Каждого СтрокаЧеклист Из Выборка.Ссылка.ЧекЛист  Цикл
			
			Строка = ТЗчекЛист.Добавить();
			Строка.Показатель = СтрокаЧекЛист.Показатель;
			Строка.ЕдиницаИзмерения = СтрокаЧекЛист.ЕдиницаИзмерения;
			Строка.ЗначениеСдача = СтрокаЧекЛист.Значение;
			Строка.ЗначениеПрием = Неопределено;

		КонецЦикла;
		
		ТЗпоказатели = ТЗчекЛист.Скопировать(,"Показатель,ЕдиницаИзмерения");
		ТЗпоказатели.Свернуть("Показатель,ЕдиницаИзмерения");

		//ТЗчекЛист.Свернуть("Показатель,ЕдиницаИзмерения","ЗначениеПрием,ЗначениеСдача");
		
		ЧеклистЗаголовок= Макет.ПолучитьОбласть("ЧеклистЗаголовок");
		ТабДок.Вывести(ЧеклистЗаголовок);
		ЧеклистШапка= Макет.ПолучитьОбласть("ЧеклистШапка");
		ТабДок.Вывести(ЧеклистШапка);

		ЧекЛист= Макет.ПолучитьОбласть("ЧекЛист");
        Номер=1;

		Для Каждого Строка Из ТЗпоказатели  Цикл
	
			ЧекЛист.Параметры.Номер = Номер;
			ЧекЛист.Параметры.Показатель = Строка.Показатель;
			ЧекЛист.Параметры.ЕдиницаИзмерения = Строка.ЕдиницаИзмерения;
			ЧекЛист.Параметры.ЗначениеПрием = "";
			ЧекЛист.Параметры.ЗначениеСдача = "";
			Для Каждого СтрокаЧеклист Из ТЗчекЛист Цикл
				Если СтрокаЧеклист.Показатель = Строка.Показатель и СтрокаЧеклист.ЕдиницаИзмерения = Строка.ЕдиницаИзмерения тогда
					Если СтрокаЧеклист.ЗначениеПрием <> null и СтрокаЧеклист.ЗначениеПрием <> Неопределено тогда
						ЧекЛист.Параметры.ЗначениеПрием = СтрокаЧеклист.ЗначениеПрием;
					КонецЕсли;
					Если СтрокаЧеклист.ЗначениеСдача <> null и СтрокаЧеклист.ЗначениеСдача <> Неопределено тогда
						ЧекЛист.Параметры.ЗначениеСдача = СтрокаЧеклист.ЗначениеСдача;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
						
			ТабДок.Вывести(ЧекЛист);
			Номер=Номер+1;
		КонецЦикла;
		
		// документы
		
		ДокументыЗаголовок= Макет.ПолучитьОбласть("ДокументыЗаголовок");
		ТабДок.Вывести(ДокументыЗаголовок);
		ДокументыШапка= Макет.ПолучитьОбласть("ДокументыШапка");
		ТабДок.Вывести(ДокументыШапка);

		ДокументыСтр = Макет.ПолучитьОбласть("Документы");
        Номер=1;
		Для Каждого Строка Из Выборка.Ссылка.ДокументыДляОзнакомления  Цикл
			ДокументыСтр.Параметры.Номер = Номер;
			ДокументыСтр.Параметры.Документ = Строка.Документ;
			ДокументыСтр.Параметры.Ознакомлен = ?(Строка.КОзнакомлениюПринимающему=истина,"Да","Нет");
			
			Если (Не ТабДок.ПроверитьВывод(ДокументыСтр)) Тогда
				НомерСтраницы    = НомерСтраницы + 1;
	            ОбластьЗаголовок.Параметры.ТекстНомерСтраницы = "Страница № " + Строка(НомерСтраницы);
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	            ТабДок.Вывести(ОбластьЗаголовок);
	            ТабДок.Вывести(ДокументыШапка);
			КонецЕсли;
			
			ТабДок.Вывести(ДокументыСтр);
			Номер=Номер+1;
		КонецЦикла;

		
		// события 
		
		ЗапросСобытия = Новый Запрос;
		ЗапросСобытия.Текст =
		"ВЫБРАТЬ
		|	ОперативныйЖурнал.Дата КАК Дата,
		|	ОперативныйЖурнал.Комментарий КАК Комментарий,
		|	ОперативныйЖурнал.ВидЗаписи КАК ВидЗаписи,
		|	ОперативныйЖурнал.Событие КАК Событие,
		|	ОперативныйЖурнал.ДатаСобытия КАК ДатаСобытия
		|ИЗ
		|	Документ.ОперативныйЖурнал КАК ОперативныйЖурнал
		|ГДЕ
		|	ОперативныйЖурнал.Вахта = &Вахта
		|	И ОперативныйЖурнал.Дата МЕЖДУ &Дата1 И &Дата2
		|	И ОперативныйЖурнал.Подразделение = &Подразделение
		|	И ОперативныйЖурнал.Смена = &Смена
		|	И ОперативныйЖурнал.Проведен = ИСТИНА
		|	И ОперативныйЖурнал.Чистовик = ИСТИНА
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаСобытия";
		
		ЗапросСобытия.Параметры.Вставить("Вахта", Выборка.Вахта);
		ЗапросСобытия.Параметры.Вставить("Смена", Выборка.Смена);
		ЗапросСобытия.Параметры.Вставить("Подразделение", Выборка.Подразделение);
		ЗапросСобытия.Параметры.Вставить("Дата1", Выборка.Дата-46800);  //документы за 13 часов
		ЗапросСобытия.Параметры.Вставить("Дата2", Выборка.Дата+3600);   //еще доп час

	
		ВыборкаСобытия = ЗапросСобытия.Выполнить().Выбрать();

		ЗаписиШапка= Макет.ПолучитьОбласть("ЗаписиШапка");
		ТабДок.Вывести(ЗаписиШапка);
		
		Записи = Макет.ПолучитьОбласть("Записи");
		Пока ВыборкаСобытия.Следующий() Цикл
			Записи.Параметры.Время = ВыборкаСобытия.ДатаСобытия;
			Содержание=?(СокрЛП(ВыборкаСобытия.Комментарий)<>"",ВыборкаСобытия.Комментарий,Строка(ВыборкаСобытия.ВидЗаписи) +" ("+ Строка(ВыборкаСобытия.Событие)+")" );
			Записи.Параметры.Содержание = Содержание;
			
			Если (Не ТабДок.ПроверитьВывод(Записи)) Тогда
				НомерСтраницы    = НомерСтраницы + 1;
	            ОбластьЗаголовок.Параметры.ТекстНомерСтраницы = "Страница № " + Строка(НомерСтраницы);
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	            ТабДок.Вывести(ОбластьЗаголовок);
	            ТабДок.Вывести(ЗаписиШапка);
			КонецЕсли;	
			ТабДок.Вывести(Записи);
			
			
		КонецЦикла;	
		
		//Если ВставлятьРазделительСтраниц Тогда
		//	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		//КонецЕсли;
		
		//ВставлятьРазделительСтраниц = Истина;
		
	КонецЦикла;
	
    Возврат ТабДок;
	
	
КонецФункции
