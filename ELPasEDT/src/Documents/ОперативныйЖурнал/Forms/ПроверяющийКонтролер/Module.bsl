
&НаСервере
Функция ПарольОкончаниеВводаТекстаНаСервере()
	
	ЭталонныйПароль = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПаролиДляПроверяющегоКонтролера.Пароль КАК Пароль
		|ИЗ
		|	РегистрСведений.ПаролиДляПроверяющегоКонтролера КАК ПаролиДляПроверяющегоКонтролера
		|ГДЕ
		|	ПаролиДляПроверяющегоКонтролера.Организация = &Организация
		|	И ПаролиДляПроверяющегоКонтролера.Пользователь = &Пользователь";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда
		ЭталонныйПароль = Результат.Пароль;
	КонецЕсли;
	
	Возврат ЭталонныйПароль;		
	
КонецФункции

&НаКлиенте
Процедура ПарольОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка) 
	
	СтандартнаяОбработка = Ложь;
	
	КодВозврата = ПарольОкончаниеВводаТекстаНаСервере();
	Если КодВозврата = Неопределено Тогда
		ПоказатьПредупреждение(, "Пароль для текущего Проверяющего контролера не задан. Обратитесь к администратору.");
	ИначеЕсли Не КодВозврата = Текст Тогда
		ПоказатьПредупреждение(, "Пароль не верный.");
	Иначе
		ЭтаФорма.Закрыть("ок");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//Параметры.Свойство("Пользователь", Пользователь);
	Параметры.Свойство("Организация", Организация);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПаролиДляПроверяющегоКонтролера.Пароль КАК Пароль,
		|	ПаролиДляПроверяющегоКонтролера.Пользователь КАК Пользователь
		|ИЗ
		|	РегистрСведений.ПаролиДляПроверяющегоКонтролера КАК ПаролиДляПроверяющегоКонтролера
		|ГДЕ
		|	ПаролиДляПроверяющегоКонтролера.Организация = &Организация";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда
		Пользователь = Результат.Пользователь;
	КонецЕсли;
	
КонецПроцедуры
