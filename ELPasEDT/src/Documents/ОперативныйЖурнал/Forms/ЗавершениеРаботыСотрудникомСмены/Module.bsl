
&НаСервере
Функция ВыполнитьЗавершениеНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	АктивныеСмены.Период КАК Период,
		|	АктивныеСмены.Регистратор КАК Регистратор,
		|	АктивныеСмены.Подразделение КАК Подразделение,
		|	АктивныеСмены.Смена КАК Смена,
		|	АктивныеСмены.СтаршийСмены КАК СтаршийСмены,
		|	АктивныеСмены.СменаОткрыта КАК СменаОткрыта
		|ПОМЕСТИТЬ ВТ_Регистр
		|ИЗ
		|	РегистрСведений.АктивныеСмены КАК АктивныеСмены
		|ГДЕ
		|	АктивныеСмены.Подразделение = &Подразделение
		|	И АктивныеСмены.СтаршийСмены = &СтаршийСмены
		|	И АктивныеСмены.СменаОткрыта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ВТ_Регистр.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_ПоследняяЗаписьПоПодразделению
		|ИЗ
		|	ВТ_Регистр КАК ВТ_Регистр
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Регистр.Регистратор КАК Регистратор
		|ИЗ
		|	ВТ_Регистр КАК ВТ_Регистр
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПоследняяЗаписьПоПодразделению КАК ВТ_ПоследняяЗаписьПоПодразделению
		|		ПО ВТ_Регистр.Период = ВТ_ПоследняяЗаписьПоПодразделению.Период";
	
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("СтаршийСмены", ПараметрыСеанса.ТекущийПользователь);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		ДокОбъект = Результат.Регистратор.ПолучитьОбъект();
		Для Каждого ТекСтр Из СписокСотрудников Цикл
			Если ТекСтр.Выбран И ЗначениеЗаполнено(ТекСтр.ВремяОкончанияРаботы) Тогда
				Сотрудник = ТекСтр.Сотрудник;
				//проверка, что сотрудник принял смену
				//проверку выполняем только если дополнение выполняет НСС, для сотрудников НСЦ проверка не нужна			
				Если РольДоступна("НСС") Тогда				
					Если Не СотрудникПринялСмену(Сотрудник, ДокОбъект.Смена) Тогда
						Текст = "Сотрудник " + Сотрудник + " не принял смену"; 
						Комментарий = ?(ЗначениеЗаполнено(Комментарий), Комментарий + Символы.ПС + Текст, Текст);
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				//проверка, что сотрудник принял смену
				масСтрок = ДокОбъект.Сотрудники.НайтиСтроки(Новый Структура("Сотрудник", Сотрудник));
				Если масСтрок.Количество() = 0 Тогда 				
					Текст = "Сотрудник " + Сотрудник + " не найден в составе смены"; 
				ИначеЕсли масСтрок.Количество() = 1 Тогда
					НовСтр = масСтрок[0];
					НовСтр.ВремяОкончанияРаботы = ТекСтр.ВремяОкончанияРаботы;
					Текст = "Для сотрудника " + Сотрудник + " завершена работа в составе смены";
				КонецЕсли;
				Комментарий = ?(ЗначениеЗаполнено(Комментарий), Комментарий + Символы.ПС + Текст, Текст);
			КонецЕсли;
		КонецЦикла;
		Попытка
			ДокОбъект.Записать();
		Исключение
		КонецПопытки;
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция СотрудникПринялСмену(СтаршийСмены, Смена)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	АктивныеСмены.Период КАК Период,
		|	АктивныеСмены.Регистратор КАК Регистратор
		|ПОМЕСТИТЬ ВТ_Регистр
		|ИЗ
		|	РегистрСведений.АктивныеСмены КАК АктивныеСмены
		|ГДЕ
		|	АктивныеСмены.Подразделение В ИЕРАРХИИ(&Подразделение)
		|	И АктивныеСмены.СтаршийСмены.ФизическоеЛицо = &СтаршийСмены
		|	И АктивныеСмены.СменаОткрыта
		|	И АктивныеСмены.Смена = &Смена
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ВТ_Регистр.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_ПоследняяЗаписьПоПодразделению
		|ИЗ
		|	ВТ_Регистр КАК ВТ_Регистр
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Регистр.Регистратор КАК Регистратор
		|ИЗ
		|	ВТ_Регистр КАК ВТ_Регистр
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПоследняяЗаписьПоПодразделению КАК ВТ_ПоследняяЗаписьПоПодразделению
		|		ПО ВТ_Регистр.Период = ВТ_ПоследняяЗаписьПоПодразделению.Период";
	
	Запрос.УстановитьПараметр("Подразделение", СтаршийСмены.Подразделение);
	Запрос.УстановитьПараметр("Смена", Смена);
	Запрос.УстановитьПараметр("СтаршийСмены", СтаршийСмены);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции  

&НаКлиенте
Процедура ВыполнитьЗавершение(Команда)
	
	Комментарий = "";
	
	Если СписокСотрудников.Количество() = 0 Тогда
		ПоказатьПредупреждение(,"Список сотрудников для завершения работы на смене пуст!");
		Возврат;
	КонецЕсли;		
	
	Если ВыполнитьЗавершениеНаСервере() Тогда
		ПоказатьПредупреждение(, Комментарий);
	Иначе
		ПоказатьПредупреждение(,"Открытая смена для сотрудника/ сотрудников не найдена!");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Подразделение = ПараметрыСеанса.ТекущийПользователь.Подразделение;
	ЗаполнитьСотрудников();
	
КонецПроцедуры

&НаСервере
Функция ПроверитьПодразделениеФизлица(ФизЛицо)
	
	ТекПодразделение = ФизЛицо.Подразделение;
	ПроверкаПройдена = Ложь;
	
	Пока ЗначениеЗаполнено(ТекПодразделение) Цикл
		
		Если ТекПодразделение = Подразделение Тогда
			ПроверкаПройдена = Истина;
			Прервать;
		КонецЕсли;
		
		ТекПодразделение = ТекПодразделение.Родитель;
		
	КонецЦикла;
	
	Возврат ПроверкаПройдена;
	
КонецФункции 

&НаСервере
Процедура ЗаполнитьСотрудников()
	
	СтаршийСмены = ПараметрыСеанса.ТекущийПользователь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	АктивныеСмены.Период КАК Период,
		|	АктивныеСмены.Регистратор КАК Регистратор,
		|	АктивныеСмены.Подразделение КАК Подразделение,
		|	АктивныеСмены.Смена КАК Смена,
		|	АктивныеСмены.СтаршийСмены КАК СтаршийСмены,
		|	АктивныеСмены.СменаОткрыта КАК СменаОткрыта
		|ПОМЕСТИТЬ ВТ_Регистр
		|ИЗ
		|	РегистрСведений.АктивныеСмены КАК АктивныеСмены
		|ГДЕ
		|	АктивныеСмены.Подразделение = &Подразделение
		|	И АктивныеСмены.СтаршийСмены = &СтаршийСмены
		|	И АктивныеСмены.СменаОткрыта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ВТ_Регистр.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_ПоследняяЗаписьПоПодразделению
		|ИЗ
		|	ВТ_Регистр КАК ВТ_Регистр
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Регистр.Регистратор КАК Регистратор
		|ПОМЕСТИТЬ ВТ_ДокументСменыСдачи
		|ИЗ
		|	ВТ_Регистр КАК ВТ_Регистр
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПоследняяЗаписьПоПодразделению КАК ВТ_ПоследняяЗаписьПоПодразделению
		|		ПО ВТ_Регистр.Период = ВТ_ПоследняяЗаписьПоПодразделению.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОперативныйЖурналСотрудники.Сотрудник КАК Сотрудник
		|ИЗ
		|	Документ.ОперативныйЖурнал.Сотрудники КАК ОперативныйЖурналСотрудники
		|ГДЕ
		|	ОперативныйЖурналСотрудники.Ссылка В
		|			(ВЫБРАТЬ
		|				ВТ_ДокументСменыСдачи.Регистратор КАК Регистратор
		|			ИЗ
		|				ВТ_ДокументСменыСдачи КАК ВТ_ДокументСменыСдачи)
		|	И ОперативныйЖурналСотрудники.Выбран
		|	И ОперативныйЖурналСотрудники.ВремяОкончанияРаботы = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
	
	Запрос.УстановитьПараметр("Подразделение", СтаршийСмены.Подразделение);
	Запрос.УстановитьПараметр("СтаршийСмены", СтаршийСмены); 	
	
	СписокСотрудников.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСотрудниковВремяОкончанияРаботыПриИзменении(Элемент)
	
	ТекСтрока = Элементы.СписокСотрудников.ТекущиеДанные;
	ТекСтрока.Выбран = ЗначениеЗаполнено(ТекСтрока.ВремяОкончанияРаботы);
	
КонецПроцедуры










