
&НаСервере
Функция СоздатьРаспоряжениеНаСервере(ТекущаяДатаКлиент, Сотрудник, Смена = Неопределено, Вахта = Неопределено, ДатаНачалаСмены = Неопределено, ДатаОкончанияСмены = Неопределено) 
	
	//Распоряжение для Сотрудника
	НовДок = Документы.ОперативныйЖурнал.СоздатьДокумент();
	НовДок.Дата = ТекущаяДатаКлиент;
	НовДок.ВидЗаписи = Справочники.ВидыЗаписей.Авария;
	НовДок.Событие = Справочники.События.НачатьРаботы;
	НовДок.Ответственный = ПолучитьПользователя(Сотрудник);
	НовДок.Комментарий = "Авария: НСС -> НСЦ " + Комментарий;
	НовДок.Подразделение = Сотрудник.Подразделение;
	НовДок.ДатаСобытия = ДатаСобытия;
	НовДок.Смена = Смена;
	НовДок.Вахта = Вахта;
	НовДок.Статус = Перечисления.СтатусыДокументаОперативногоЖурнала.Чистовик;
	НовДок.ДатаНачалаСмены = ДатаНачалаСмены;
	НовДок.ДатаОкончанияСмены = ДатаОкончанияСмены;
	НовДок.ПолученоОт = Автор;
	Для Каждого ТекСтр Из СписокОборудования Цикл
		НовСтр = НовДок.Оборудование.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, ТекСтр);
		НовСтр.СтатусОборудования = Перечисления.СтатусыОборудования.ОборудованиеТребующееПовышенногоВнимания;
		НовСтр.СтатусАктуален = Истина;
		НовСтр.ДатаВыходаИзСтроя = ТекущаяДата();
	КонецЦикла;
	НовДок.Описание = СформироватьОписание(Вахта, Смена, ДатаНачалаСмены, Автор.Подразделение);
	
	Попытка
		НовДок.Записать();
		Сообщить("Сформирована запись ОЖ " + НовДок + " для сотрудника " + Сотрудник);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки; 		
	
КонецФункции

Функция СформироватьОписание(Вахта, Смена, ДатаНачалаСмены, Подразделение) 	
		
	Если стрДлина(Строка(Смена.ВремяНачала)) = 19 Тогда
		тВремяНачала = " " + Лев(Прав(Смена.ВремяНачала, 8), 5);
	Иначе
		тВремяНачала = Лев(Прав(Смена.ВремяНачала, 8), 5);
	КонецЕсли;	
	тВремяОкончания = Лев(Прав(Смена.ВремяОкончания, 8), 5); 		
	СменаПрописью = Формат(ДатаНачалаСмены, "ДФ=dd/MM/yy") + тВремяНачала + " - " + тВремяОкончания; 		
	Описание = "" + Формат(ТекущаяДата(), "ДЛФ=DDT") + " " + Подразделение + "        " + Вахта + "        " + Смена + "        " + СменаПрописью;
	Возврат Описание;  		
	
КонецФункции

&НаСервере
Функция ПолучитьПользователя(ФизическоеЛицо)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Пользователи.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|ГДЕ
		|	Пользователи.ФизическоеЛицо = &ФизическоеЛицо
		|	И НЕ Пользователи.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		Возврат Результат.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ЗаполнитьСписокСотрудников() 
	
	СменаНСС = ПолучитьСменуНСС();
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	АктивныеСмены.СтаршийСмены.ФизическоеЛицо КАК Сотрудник
	|ПОМЕСТИТЬ ВТ_Пользователи
	|ИЗ
	|	РегистрСведений.АктивныеСмены КАК АктивныеСмены
	|ГДЕ
	|	АктивныеСмены.Подразделение В ИЕРАРХИИ(&Подразделение)
	|	И АктивныеСмены.СменаОткрыта
	|	И АктивныеСмены.Смена = &Смена
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Пользователи.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТ_СотрудникиПринявшиеСмену
	|ИЗ
	|	ВТ_Пользователи КАК ВТ_Пользователи
	|ГДЕ
	|	ВТ_Пользователи.Сотрудник.НСЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АктивныеСменыСрезПоследних.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТ_ДокументПриемаСмены
	|ИЗ
	|	РегистрСведений.АктивныеСмены.СрезПоследних(
	|			,
	|			Подразделение = &Подразделение
	|				И СтаршийСмены = &СтаршийСмены) КАК АктивныеСменыСрезПоследних
	|ГДЕ
	|	АктивныеСменыСрезПоследних.СменаОткрыта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОперативныйЖурналСотрудники.Ссылка.Вахта КАК Вахта,
	|	ОперативныйЖурналСотрудники.Ссылка.Смена КАК Смена,
	|	ОперативныйЖурналСотрудники.Ссылка.СтаршийСмены.ФизическоеЛицо КАК СтаршийСменыФизическоеЛицо,
	|	Ложь КАК Выбран,
	|	ОперативныйЖурналСотрудники.Ссылка.ДатаНачалаСмены КАК ДатаНачалаСмены,
	|	ОперативныйЖурналСотрудники.Ссылка.ДатаОкончанияСмены КАК ДатаОкончанияСмены,
	|	ОперативныйЖурналСотрудники.Сотрудник КАК Сотрудник
	|ИЗ
	|	Документ.ОперативныйЖурнал.Сотрудники КАК ОперативныйЖурналСотрудники
	|ГДЕ
	|	ОперативныйЖурналСотрудники.Ссылка В
	|			(ВЫБРАТЬ
	|				ВТ_ДокументПриемаСмены.Регистратор КАК Регистратор
	|			ИЗ
	|				ВТ_ДокументПриемаСмены КАК ВТ_ДокументПриемаСмены)
	|	И ОперативныйЖурналСотрудники.Выбран
	|	И ОперативныйЖурналСотрудники.Сотрудник В
	|			(ВЫБРАТЬ
	|				ВТ_СотрудникиПринявшиеСмену.Сотрудник КАК Сотрудник
	|			ИЗ
	|				ВТ_СотрудникиПринявшиеСмену КАК ВТ_СотрудникиПринявшиеСмену)";
	
	Запрос.УстановитьПараметр("Подразделение", Автор.Подразделение);
	Запрос.УстановитьПараметр("Смена", СменаНСС);
	Запрос.УстановитьПараметр("СтаршийСмены", Автор);  	
	
	СписокСотрудников.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецФункции

&НаСервере
Функция ПолучитьСменуНСС()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	АктивныеСменыСрезПоследних.Смена КАК Смена
		|ИЗ
		|	РегистрСведений.АктивныеСмены.СрезПоследних(
		|			,
		|			Подразделение = &Подразделение
		|				И СтаршийСмены = &СтаршийСмены) КАК АктивныеСменыСрезПоследних
		|ГДЕ
		|	АктивныеСменыСрезПоследних.СменаОткрыта";
	
	Запрос.УстановитьПараметр("Подразделение", Автор.Подразделение);
	Запрос.УстановитьПараметр("СтаршийСмены", Автор);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		Возврат Результат.Смена;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции 

&НаКлиенте
Процедура СоздатьРаспоряжение(Команда)
	
	//20180926
	//Проверка заполнения Оборудования
	ПроверкаПоОборудованию = Истина;
	НомСтр = 1;
	Для Каждого ТекСтр Из СписокОборудования Цикл
		Если Не ЗначениеЗаполнено(ТекСтр.Оборудование) Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не заполнено Оборудование в строке " + НомСтр;
			Сообщение.Поле = "Объект.СписокОборудования["+(НомСтр-1)+"].Оборудование";
			Сообщение.Сообщить();			
			ПроверкаПоОборудованию = Ложь;
		КонецЕсли;
		НомСтр = НомСтр + 1;
	КонецЦикла;
	Если Не ПроверкаПоОборудованию Тогда
		Возврат;
	КонецЕсли;
	//20180926
	
	РаспоряженияСформированы = Ложь;
	// 	
	СтруктураПараметров = Новый Структура("Вахта, Смена, ДатаНачалаСмены, ДатаОкончанияСмены");
	ЗаполнитьСтруктуруПараметров(СтруктураПараметров);
	Для Каждого ТекСтр Из СписокСотрудников Цикл
		Если ТекСтр.Выбран Тогда  
			ТекущаяДатаКлиент = ТекущаяДата();
			СоздатьРаспоряжениеНаСервере(ТекущаяДатаКлиент, ТекСтр.Сотрудник, ТекСтр.Смена, ТекСтр.Вахта, ТекСтр.ДатаНачалаСмены, ТекСтр.ДатаОкончанияСмены);
			РаспоряженияСформированы = Истина;
		КонецЕсли;
	КонецЦикла;
	//
	Если РаспоряженияСформированы Тогда
		ПоказатьПредупреждение(,"Выполнено!");
		//Оповестить("ОбновитьСписокОЖ");
	Иначе 
		ПоказатьПредупреждение(,"Сотрудники для исполнения не выбраны!");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтруктуруПараметров(СтруктураПараметров)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	АктивныеСмены.Период КАК Период,
		|	АктивныеСмены.Регистратор КАК Регистратор
		|ПОМЕСТИТЬ ВТ_Регистр
		|ИЗ
		|	РегистрСведений.АктивныеСмены КАК АктивныеСмены
		|ГДЕ
		|	АктивныеСмены.Подразделение = &Подразделение
		|	И АктивныеСмены.СтаршийСмены = &СтаршийСмены
		|	И АктивныеСмены.СменаОткрыта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ВТ_Регистр.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_ПоследняяЗаписьПоПодразделению
		|ИЗ
		|	ВТ_Регистр КАК ВТ_Регистр
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Регистр.Регистратор.Вахта КАК Вахта,
		|	ВТ_Регистр.Регистратор.Смена КАК Смена,
		|	ВТ_Регистр.Регистратор.ДатаНачалаСмены КАК ДатаНачалаСмены,
		|	ВТ_Регистр.Регистратор.ДатаОкончанияСмены КАК ДатаОкончанияСмены
		|ИЗ
		|	ВТ_Регистр КАК ВТ_Регистр
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПоследняяЗаписьПоПодразделению КАК ВТ_ПоследняяЗаписьПоПодразделению
		|		ПО ВТ_Регистр.Период = ВТ_ПоследняяЗаписьПоПодразделению.Период";
	
	Запрос.УстановитьПараметр("Подразделение", Автор.Подразделение);
	Запрос.УстановитьПараметр("СтаршийСмены", Автор);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СтруктураПараметров, Результат);
	КонецЕсли;   	
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Автор = ПараметрыСеанса.ТекущийПользователь;
	ДатаПриемаСмены = ОперативныйЖурнал.ПолучитьДатуПриемаСмены(Автор);
	ЗаполнитьСписокСотрудников();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокОборудованияПриИзменении(Элемент)
	
	ТекДанные = Элементы.СписокОборудования.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СписокОборудования.НайтиСтроки(Новый Структура("Оборудование", ТекДанные.Оборудование)).Количество() > 1 Тогда
		ПоказатьПредупреждение(,"Данное оборудование уже есть в табличной части!");
		СписокОборудования.Удалить(ТекДанные);
		Возврат;
	КонецЕсли;
	
	ТекДанные.ДиспетчерскоеНаименование = ПолучитьДиспетчерскоеНаименование(ТекДанные.Оборудование);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДиспетчерскоеНаименование(Оборудование)
	
	Возврат Оборудование.ДиспетчерскоеНаименование;
	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ДатаСобытия = ТекущаяДата();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаСобытияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ДатаПриемаСмены) Тогда
		Если ДатаСобытия < ДатаПриемаСмены Тогда
			ПоказатьПредупреждение(, "Нельзя создать документ ранее начала приема смены (" + Формат(ДатаПриемаСмены, "ДЛФ=DDT") + ").");
			ДатаСобытия = ДатаПриемаСмены + 1;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры























