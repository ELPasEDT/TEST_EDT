
&НаСервереБезКонтекста
Функция ПолучитьЗначениеРеквизита(Объект, Реквизит)
	Возврат Объект[Реквизит];
КонецФункции

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	Объект.Организация = ПолучитьЗначениеРеквизита(Объект.Подразделение, "Организация");
КонецПроцедуры  

&НаКлиенте
Процедура Подбор(Команда)
	
	Настройки = Новый НастройкиКомпоновкиДанных;
 
    ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Ложь);
     
	Форма = ОткрытьФорму("Справочник.События.ФормаВыбора", ПараметрыФормы, ЭтаФорма); 
	Форма.АвтоЗаголовок = Ложь;
	Форма.Заголовок = "Подбор событий";
	
КонецПроцедуры  

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.События") Тогда
		
		Если Объект.СписокСобытий.НайтиСтроки(Новый Структура("Событие", ВыбранноеЗначение)).Количество() > 0 Тогда
			ПоказатьПредупреждение(,"Данное событие уже есть в табличной части!");
			Возврат;
		КонецЕсли;
		ДобавитьСобытие(ВыбранноеЗначение);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСобытие(Событие)
	
	НовСтр = Объект.СписокСобытий.Добавить();
	НовСтр.Событие = Событие;
	НовСтр.Порядок = Объект.СписокСобытий.Количество();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСобытийСобытиеПриИзменении(Элемент)
	
	ТекДанные = Элементы.СписокСобытий.ТекущиеДанные;
	Если Не ТекДанные = Неопределено Тогда
		Если Объект.СписокСобытий.НайтиСтроки(Новый Структура("Событие", ТекДанные.Событие)).Количество() > 1 Тогда
			ПоказатьПредупреждение(,"Данное событие уже есть в табличной части!");
			НомерСтроки = Объект.СписокСобытий.НайтиСтроки(Новый Структура("Событие", ТекДанные.Событие))[1].НомерСтроки;
			Объект.СписокСобытий.Удалить(НомерСтроки-1);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	ТекДанные.Порядок = Объект.СписокСобытий.Количество();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		Объект.Комментарий = "";
		Объект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура ПриИзмененииДанныхНаСервере(ДатаДокумента)
	
	СтруктураДанных = ДокументУжеСоздан(Объект.Ссылка.Метаданные(), ДатаДокумента, Объект.Подразделение);
	АдресХранилища = ПоместитьВоВременноеХранилище(СтруктураДанных, ЭтаФорма.УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидЗаписиПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаСервере(Объект.Дата);	
	СтруктураДанных = ПолучитьИзВременногоХранилища(АдресХранилища);
	Если Не СтруктураДанных.ДокументРапорта = Неопределено Тогда
		Модифицированность = Ложь;
		Закрыть();
		РапортКлиент.ПоказатьИнформациюПоРапорту(СтруктураДанных, ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ДокументУжеСоздан(мДокумент, ДатаДокумента, Подразделение)  
	
	ИмяДокумента = мДокумент.Имя;
	ДопУсловие = ?(ИмяДокумента = "ЗакреплениеВидаЗаписиИСобытийЗаПодразделением", "И ДокументРапорта.ВидЗаписи = &ВидЗаписи", "");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДокументРапорта.Ссылка КАК Ссылка
		|ИЗ
		|	Документ."+ИмяДокумента+" КАК ДокументРапорта
		|ГДЕ
		|	ДокументРапорта.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|   И ДокументРапорта.Подразделение = &Подразделение
		|   "+ДопУсловие+"
		|	И НЕ ДокументРапорта.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ДатаДокумента));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ДатаДокумента));	
	Запрос.УстановитьПараметр("ИмяДокумента", ИмяДокумента);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("ВидЗаписи", Объект.ВидЗаписи);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		ДокументРапорта = Результат.Ссылка;
	Иначе
		ДокументРапорта = Неопределено;
	КонецЕсли;
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ДокументРапорта", ДокументРапорта);
	СтруктураДанных.Вставить("ИмяДокумента", ИмяДокумента);
	СтруктураДанных.Вставить("СинонимДокумента", мДокумент.Синоним);
	
	Возврат СтруктураДанных;
	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Объект.Ссылка.Пустая() Тогда
		ПриИзмененииДанныхНаСервере(ТекущаяДата());
		СтруктураДанных = ПолучитьИзВременногоХранилища(АдресХранилища);
		Если Не СтруктураДанных.ДокументРапорта = Неопределено Тогда
			Отказ = Истина;
			РапортКлиент.ПоказатьИнформациюПоРапорту(СтруктураДанных, ЭтаФорма);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаСервере(Объект.Дата);	
	СтруктураДанных = ПолучитьИзВременногоХранилища(АдресХранилища);
	Если Не СтруктураДанных.ДокументРапорта = Неопределено Тогда
		Модифицированность = Ложь;
		Закрыть();
		РапортКлиент.ПоказатьИнформациюПоРапорту(СтруктураДанных, ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СобытиеПоУмолчаниюНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеВыбора = ПолучитьСписокСобытий();
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСписокСобытий()
	
	СписокСобытий = Новый СписокЗначений();
	
	Для Каждого ТекСтр Из Объект.СписокСобытий Цикл
		СписокСобытий.Добавить(ТекСтр.Событие);
	КонецЦикла;
	
	Возврат СписокСобытий;
	
КонецФункции

&НаКлиенте
Процедура СобытиеПоУмолчаниюПриИзменении(Элемент)
	
	Если Объект.СписокСобытий.НайтиСтроки(Новый Структура("Событие", Объект.СобытиеПоУмолчанию)).Количество() = 0 Тогда
		ПоказатьПредупреждение(, "Данного события нет в списке событий документа!");
		Объект.СобытиеПоУмолчанию = Неопределено;
		Элемент = Неопределено;
	КонецЕсли;
	
КонецПроцедуры
























