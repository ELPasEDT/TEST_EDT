
Процедура ОбработкаПроведения(Отказ, Режим)

	// регистр ВидыЗаписейСобытияПоПодразделениям
	Движения.ВидыЗаписейСобытияПоПодразделениям.Записывать = Истина;
	Для Каждого ТекСтрокаСписокСобытий Из СписокСобытий Цикл
		Движение = Движения.ВидыЗаписейСобытияПоПодразделениям.Добавить();
		Движение.Период = Дата;
		Движение.Подразделение = Подразделение;
		Движение.ВидЗаписи = ВидЗаписи;
		Движение.Событие = ТекСтрокаСписокСобытий.Событие;
		Движение.Порядок = ТекСтрокаСписокСобытий.Порядок;
		Если ТекСтрокаСписокСобытий.Событие = СобытиеПоУмолчанию Тогда
			Движение.СобытиеПоУмолчанию = Истина;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если Не ЗначениеЗаполнено(СобытиеПоУмолчанию) И СписокСобытий.Количество() > 0 Тогда
		СобытиеПоУмолчанию = СписокСобытий[0].Событие;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
	Организация = ПолучитьОрганизациюПользователя(ТекущийПользователь.Подразделение);
	Ответственный = ТекущийПользователь;
	Подразделение = ТекущийПользователь.Подразделение;
	
КонецПроцедуры

Функция ПолучитьОрганизациюПользователя(Подразделение) 	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Подразделения.Организация КАК Организация
		|ИЗ
		|	Справочник.Подразделения КАК Подразделения
		|ГДЕ
		|	Подразделения.Ссылка = &Подразделение
		|	И НЕ Подразделения.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		Возврат Результат.Организация;
	Иначе 
		Возврат Справочники.Организации.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции