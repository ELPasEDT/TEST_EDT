
Функция ПолучитьИменаПолейТаблицыЖурнала(МестоВТаблице) Экспорт
	
	ИменаПолей = Новый Структура("
		|Дата,
		|Уровень,
		|Концентрация,		
		|Ответственный,
		|Смена,
		|Вахта,
		|Комментарий");
	
	МестоЗаписиВТаблице = Новый Структура;
	МестоЗаписиВТаблице.Вставить("НачалоЗакачки"   , 1);
	МестоЗаписиВТаблице.Вставить("ОкончаниеЗакачки", 2);
	МестоЗаписиВТаблице.Вставить("НачалоРасхода"   , 3);
	МестоЗаписиВТаблице.Вставить("ОкончаниеРасхода", 4);
	
	ИменаПолей.Комментарий = "Комментарий" + МестоВТаблице;
	Если МестоВТаблице = МестоЗаписиВТаблице.НачалоЗакачки Тогда
		ИменаПолей.Дата          = "ДатаНачалаЗакачки";
		ИменаПолей.Уровень       = "УровеньНаНачалоЗакачки";
		ИменаПолей.Концентрация  = "КонцентрацияНаНачалоЗакачки";		
		ИменаПолей.Ответственный = "ОтветственныйНачалаЗакачки";
		ИменаПолей.Смена         = "СменаНачалаЗакачки";
		ИменаПолей.Вахта         = "ВахтаНачалаЗакачки";
	ИначеЕсли МестоВТаблице = МестоЗаписиВТаблице.ОкончаниеЗакачки Тогда
		ИменаПолей.Дата          = "ДатаОкончанияЗакачки";
		ИменаПолей.Уровень       = "УровеньНаОкончаниеЗакачки";
		ИменаПолей.Концентрация  = "КонцентрацияНаОкончаниеЗакачки";
		ИменаПолей.Ответственный = "ОтветственныйОкончанияЗакачки";
		ИменаПолей.Смена         = "СменаОкончанияЗакачки";
		ИменаПолей.Вахта         = "ВахтаОкончанияЗакачки";
	ИначеЕсли МестоВТаблице = МестоЗаписиВТаблице.НачалоРасхода Тогда
		ИменаПолей.Дата          = "ДатаНачалаРасхода";
		ИменаПолей.Уровень       = "УровеньНаНачалоРасхода";
		ИменаПолей.Концентрация  = "КонцентрацияНаНачалоРасхода";
		ИменаПолей.Ответственный = "ОтветственныйНачалаРасхода";
		ИменаПолей.Смена         = "СменаНачалаРасхода";
		ИменаПолей.Вахта         = "ВахтаНачалаРасхода";
	ИначеЕсли МестоВТаблице = МестоЗаписиВТаблице.ОкончаниеРасхода Тогда
		ИменаПолей.Дата          = "ДатаОкончанияРасхода";
		ИменаПолей.Уровень       = "УровеньНаОкончаниеРасхода";
		ИменаПолей.Концентрация  = "КонцентрацияНаОкончаниеРасхода";
		ИменаПолей.Ответственный = "ОтветственныйОкончанияРасхода";
		ИменаПолей.Смена         = "СменаОкончанияРасхода";
		ИменаПолей.Вахта         = "ВахтаОкончанияРасхода";
	КонецЕсли;
	
	Возврат ИменаПолей;
	
КонецФункции

Функция ЗаполнитьРасчетныеПоказателиСтрокиЖурнала(СтрокаТаблицыЖурнала, ПараметрыОборудования = Неопределено) Экспорт
	
	Если ПараметрыОборудования = Неопределено Тогда
		Отказ = Ложь;
		ПараметрыОборудования = РегистрыСведений.ОборудованиеХимЦеха.ПолучитьПараметрыОборудования
			(СтрокаТаблицыЖурнала.Дата, СтрокаТаблицыЖурнала.Оборудование, Отказ);
	КонецЕсли;
	
	РассчитатьЗакачку = СтрокаТаблицыЖурнала.РассчитатьРасходВоВремяЗакачки;
	РассчитатьРасход  = СтрокаТаблицыЖурнала.РасходЗавершен Или СтрокаТаблицыЖурнала.РасходОтсечкаВремени;
	
	СтрокаТаблицыЖурнала.ВремяЗакачки = 0;
	СтрокаТаблицыЖурнала.ВремяРасхода = 0;
	СтрокаТаблицыЖурнала.ОбъемСработанногоРаствораРасход  = 0;
	СтрокаТаблицыЖурнала.ОбъемСработанногоРаствораЗакачка = 0;
	
	ДатаНачалаЗакачки = СтрокаТаблицыЖурнала.ДатаНачалаЗакачки;			
	ДатаНачалаРасхода = СтрокаТаблицыЖурнала.ДатаНачалаРасхода;
		
	Если РассчитатьРасход И ЗначениеЗаполнено(ДатаНачалаРасхода) Тогда	
		СтрокаТаблицыЖурнала.ВремяРасхода = 
			(СтрокаТаблицыЖурнала.ДатаОкончанияРасхода - ДатаНачалаРасхода) / 60; // Секунды в минуты
		СтрокаТаблицыЖурнала.ОбъемСработанногоРаствораРасход = 
				ПараметрыОборудования.ПлощадьОснования * (СтрокаТаблицыЖурнала.УровеньНаНачалоРасхода - СтрокаТаблицыЖурнала.УровеньНаОкончаниеРасхода);
			КонецЕсли;
			
	// Объем реагента, израсходованного в процессе закачки
	Если РассчитатьЗакачку Тогда
		
		СтрокаТаблицыЖурнала.ВремяЗакачки =
			(СтрокаТаблицыЖурнала.ДатаОкончанияЗакачки - ДатаНачалаЗакачки) / 60; // Секунды в минуты
			
				
		Если СтрокаТаблицыЖурнала.ОбъемСработанногоРаствораРасход <> 0 И СтрокаТаблицыЖурнала.ВремяРасхода <> 0 Тогда
			СкоростьРасхода = СтрокаТаблицыЖурнала.ОбъемСработанногоРаствораРасход / СтрокаТаблицыЖурнала.ВремяРасхода;
		Иначе
			СкоростьРасхода = ПолучитьСкоростьРасхода(СтрокаТаблицыЖурнала.Оборудование, СтрокаТаблицыЖурнала.Дата);
		КонецЕсли;
		
		СтрокаТаблицыЖурнала.ОбъемСработанногоРаствораЗакачка =
			СкоростьРасхода * СтрокаТаблицыЖурнала.ВремяЗакачки;
		
	КонецЕсли;		
			
	///////////////////////////////////////////////////////////////////////////////
	// Итоги
	
	Расшифровка = "";
	
	Плотность = СтрокаТаблицыЖурнала.ПлотностьПоТаблицам;
	
	ДобавитьПоказательВРасшифровку(Расшифровка, "Расход =");
	
	СтрокаТаблицыЖурнала.Расход = РассчитатьПоФормуле(Перечисления.РассчетныеПоказателиЖурналаУчетаРеагентов.Расход,
		СтрокаТаблицыЖурнала.Реагент,
		СтрокаТаблицыЖурнала.Оборудование.Организация,
		СтрокаТаблицыЖурнала.ОбъемСработанногоРаствораЗакачка,
		СтрокаТаблицыЖурнала.ОбъемСработанногоРаствораРасход,
		Макс(СтрокаТаблицыЖурнала.КонцентрацияНаНачалоЗакачки, СтрокаТаблицыЖурнала.КонцентрацияНаОкончаниеРасхода),
		Плотность, // плотность
		СтрокаТаблицыЖурнала.Партия, // партия
		СтрокаТаблицыЖурнала.Расход, // расход100
		СтрокаТаблицыЖурнала.ЕдиницаИзмеренияКонцентрации, // е.и. конц
		СтрокаТаблицыЖурнала.ЕдиницаИзмеренияКоличества,  // е.и. колич
		СтрокаТаблицыЖурнала.ЕдиницаИзмеренияПлотности,
		Расшифровка);
		
	ДобавитьПоказательВРасшифровку(Расшифровка, "РасходТоварногоРеагента =");	
		
	СтрокаТаблицыЖурнала.РасходТоварногоРеагента = РассчитатьПоФормуле(Перечисления.РассчетныеПоказателиЖурналаУчетаРеагентов.РасходТоварногоРеагента,
		СтрокаТаблицыЖурнала.Реагент,
		СтрокаТаблицыЖурнала.Оборудование.Организация,
		СтрокаТаблицыЖурнала.ОбъемСработанногоРаствораЗакачка,
		СтрокаТаблицыЖурнала.ОбъемСработанногоРаствораРасход,
		Макс(СтрокаТаблицыЖурнала.КонцентрацияНаНачалоЗакачки, СтрокаТаблицыЖурнала.КонцентрацияНаОкончаниеРасхода),
		Плотность, // плотность
		СтрокаТаблицыЖурнала.Партия, // партия
		СтрокаТаблицыЖурнала.Расход, // расход100
		СтрокаТаблицыЖурнала.ЕдиницаИзмеренияКонцентрации, // е.и. конц
		СтрокаТаблицыЖурнала.ЕдиницаИзмеренияКоличества,  // е.и. колич
		СтрокаТаблицыЖурнала.ЕдиницаИзмеренияПлотности,
		Расшифровка);
		
	Возврат Расшифровка;	
		
КонецФункции

Функция ПолучитьСкоростьРасхода(Оборудование, Дата)
	
	Скорость = 0;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВЫБОР
	|		КОГДА ЗаписьЖурналаУчетаРеагентов.ВремяРасхода <> 0
	|			ТОГДА ЗаписьЖурналаУчетаРеагентов.ОбъемСработанногоРаствораРасход / ЗаписьЖурналаУчетаРеагентов.ВремяРасхода
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СкоростьРасхода,
	|	ЗаписьЖурналаУчетаРеагентов.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЗаписьЖурналаУчетаРеагентов КАК ЗаписьЖурналаУчетаРеагентов
	|ГДЕ
	|	ЗаписьЖурналаУчетаРеагентов.ВремяРасхода <> 0
	|	И ЗаписьЖурналаУчетаРеагентов.ОбъемСработанногоРаствораРасход <> 0
	|	И ЗаписьЖурналаУчетаРеагентов.Проведен
	|	И НЕ ЗаписьЖурналаУчетаРеагентов.ЗаписьОтменена
	|	И ЗаписьЖурналаУчетаРеагентов.Оборудование = &Оборудование
	|	И ЗаписьЖурналаУчетаРеагентов.Дата <= &Дата
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка УБЫВ
	|АВТОУПОРЯДОЧИВАНИЕ");
	Запрос.УстановитьПараметр("Оборудование", Оборудование);
	Запрос.УстановитьПараметр("Дата", Дата);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Скорость = Выборка.СкоростьРасхода;
	КонецЕсли;
	
	Возврат Скорость;
	
КонецФункции

Функция ПолучитьИнтервалРасходаТекДокумента(СтрокаТаблицыЖурнала)
	
	Интервал = Новый Структура;
	Интервал.Вставить("ДатаНачалаРасхода",    '00010101');
	Интервал.Вставить("ДатаОкончанияРасхода", '00010101');
	
	Если СтрокаТаблицыЖурнала.РасходНачат И СтрокаТаблицыЖурнала.РасходЗавершен 
		И ЗначениеЗаполнено(СтрокаТаблицыЖурнала.ДатаНачалаРасхода) И ЗначениеЗаполнено(СтрокаТаблицыЖурнала.ДатаОкончанияРасхода)
		Тогда
		
		Интервал.ДатаНачалаРасхода    = СтрокаТаблицыЖурнала.ДатаНачалаРасхода;
		Интервал.ДатаОкончанияРасхода = СтрокаТаблицыЖурнала.ДатаОкончанияРасхода;
	КонецЕсли;
	
	Возврат Интервал;
	
КонецФункции

Функция ПолучитьИнтервалЗакачкиТекДокумента(СтрокаТаблицыЖурнала)
	
	Интервал = Новый Структура;
	Интервал.Вставить("ДатаНачалаЗакачки",    '00010101');
	Интервал.Вставить("ДатаОкончанияЗакачки", '00010101');
	
	Если СтрокаТаблицыЖурнала.ЗакачкаНачата И СтрокаТаблицыЖурнала.ЗакачкаЗавершена 
		И ЗначениеЗаполнено(СтрокаТаблицыЖурнала.ДатаНачалаЗакачки) И ЗначениеЗаполнено(СтрокаТаблицыЖурнала.ДатаОкончанияРасхода)
		Тогда
		
		Интервал.ДатаНачалаЗакачки    = СтрокаТаблицыЖурнала.ДатаНачалаЗакачки;
		Интервал.ДатаОкончанияЗакачки = СтрокаТаблицыЖурнала.ДатаОкончанияЗакачки;
	КонецЕсли;
	
	Возврат Интервал;
	
КонецФункции

Функция СтруктураЗаполнена(Структура)
	
	Заполнена = Истина;
	
	Если Структура.Количество() = 0 Тогда
		Заполнена = Ложь;
	Иначе
		Для Каждого Элемент Из Структура Цикл
			Если Не ЗначениеЗаполнено(Элемент.Значение) Тогда
				Заполнена = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат Заполнена;
	
КонецФункции

Функция ПолучитьИнтервалОперации(Операция, Дата)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	РаботаХимцехаСрезПоследних.Период КАК Период,
	|	РаботаХимцехаСрезПоследних.Включено КАК Включено
	|ИЗ
	|	РегистрСведений.РаботаХимцеха.СрезПоследних(
	|			&Дата,
	|			Оборудование = &Оборудование
	|				И ВидЗаписи = &ВидЗаписи) КАК РаботаХимцехаСрезПоследних");
	
КонецФункции

Функция ПолучитьЧистыйРасход(СтрокаТаблицыЖурнала)
	
	ДатаНачалаЗакачки    = '00010101';
	ДатаОкончанияЗакачки = '00010101';
	ДатаНачалаРасхода    = '00010101';
	ДатаОкончанияРасхода = '00010101';
	
	Если СтрокаТаблицыЖурнала.РасходНачат И ЗначениеЗаполнено(СтрокаТаблицыЖурнала.ДатаНачалаРасхода) Тогда
		ДатаНачалаРасхода = СтрокаТаблицыЖурнала.ДатаНачалаРасхода;
	Иначе
		ДатаНачалаРасхода = ДатаСостоянияПроцесса();
	КонецЕсли;
	
	Если СтрокаТаблицыЖурнала.РасходНачат И ЗначениеЗаполнено(СтрокаТаблицыЖурнала.ДатаОкончанияРасхода) Тогда
		ДатаОкончанияРасхода = СтрокаТаблицыЖурнала.ДатаОкончанияРасхода;
	Иначе
		ДатаОкончанияРасхода = ДатаСостоянияПроцесса();
	КонецЕсли;
	
	
	
	Если СтрокаТаблицыЖурнала.РасходНачат И ЗначениеЗаполнено(СтрокаТаблицыЖурнала.ДатаНачалаРасхода)
		И СтрокаТаблицыЖурнала.РасходЗавершен И ЗначениеЗаполнено(СтрокаТаблицыЖурнала.ДатаОкончанияРасхода)
		И СтрокаТаблицыЖурнала.ЗакачкаНачата И ЗначениеЗаполнено(СтрокаТаблицыЖурнала.ДатаНачалаЗакачки)
		И СтрокаТаблицыЖурнала.ЗакачкаЗавершена И ЗначениеЗаполнено(СтрокаТаблицыЖурнала.ДатаОкончанияЗакачки) Тогда
		
		
		
	КонецЕсли;
	
	//
	//Если
	//
	//СтрокаТаблицыЖурнала.ВремяЗакачки =
	//		(СтрокаТаблицыЖурнала.ДатаОкончанияЗакачки - ДатаНачалаЗакачки) / 60; // Секунды в минуты
	
КонецФункции

Функция ДатаСостоянияПроцесса()
	
КонецФункции

Процедура ДобавитьПоказательВРасшифровку(Расшифровка, Показатель)
	
	Расшифровка = Расшифровка + Показатель;
	
КонецПроцедуры

Функция РазобратьСтроку(Строка, Разделитель)

	ДлинаСтроки = СтрДлина(Строка);
	Значения    = Новый Массив;
	ТекЗначение = "";
	
	Для Инд = 1 По ДлинаСтроки Цикл
		
		ТекСимвол = Сред(Строка, Инд, 1);
		
		Если СтрНайти(Разделитель, ТекСимвол) Тогда
			Значения.Добавить(ТекЗначение);
			ТекЗначение = "";
		Иначе
			ТекЗначение = ТекЗначение + ТекСимвол;
		КонецЕсли;
		
	КонецЦикла;
	
	Значения.Добавить(ТекЗначение); // добавим крайний элемент
	
	Возврат Значения;
	
КонецФункции

Функция РассчитатьПоФормуле(Показатель, 
	Реагент,
	Организация,
	
	ОбъемСработанногоРаствораЗакачка = Неопределено,
	ОбъемСработанногоРаствораРасход  = Неопределено,
	Концентрация                     = Неопределено,
	Плотность                        = Неопределено,
	
	Партия                           = Неопределено,
	Расход100                        = Неопределено,
	
	ЕдиницаИзмеренияКонцентрации     = Неопределено,
	ЕдиницаИзмеренияКоличества       = Неопределено,
	ЕдиницаИзмеренияПлотности        = Неопределено,
	
	Расшифровка = "") Экспорт
	
	Результат = 0;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ФормулыПоказателейЖурналаУчетаРеагентовРеагенты.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА ФормулыПоказателейЖурналаУчетаРеагентовРеагенты.Реагент = &Реагент
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Приоритет,
	|	ФормулыПоказателейЖурналаУчетаРеагентовРеагенты.Ссылка.Формула КАК Формула
	|ИЗ
	|	Справочник.ФормулыПоказателейЖурналаУчетаРеагентов.Реагенты КАК ФормулыПоказателейЖурналаУчетаРеагентовРеагенты
	|ГДЕ
	|	(ФормулыПоказателейЖурналаУчетаРеагентовРеагенты.Реагент = &ВидРеагента
	|			ИЛИ ФормулыПоказателейЖурналаУчетаРеагентовРеагенты.Реагент = &Реагент)
	|	И НЕ ФормулыПоказателейЖурналаУчетаРеагентовРеагенты.Ссылка.ПометкаУдаления
	|	И ФормулыПоказателейЖурналаУчетаРеагентовРеагенты.Ссылка.Показатель = &Показатель
	|	И ФормулыПоказателейЖурналаУчетаРеагентовРеагенты.Ссылка.Организация = &Организация
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет");
	Запрос.УстановитьПараметр("Показатель", Показатель);
	Запрос.УстановитьПараметр("ВидРеагента", Реагент.ВидРеагента);
	Запрос.УстановитьПараметр("Реагент", Реагент);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
	
		Попытка
			Результат = Вычислить(Выборка.Формула);
		Исключение
			Сообщить(ОписаниеОшибки());
			Результат = 0;
		КонецПопытки;
		
	КонецЕсли;
	
	// Подгогтовка расшифровкм
	
	Расшифровка = Расшифровка + Результат;
	
	ПараметрыФормулы = РазобратьСтроку(Выборка.Формула, " */-+()?,
	|");
	
	Расшифровка = Расшифровка + "
	|" + Выборка.Формула + "
	|";
	
	
	Для Каждого ПараметрФормулы Из ПараметрыФормулы Цикл
		
		Попытка
			
			Значение = Вычислить(ПараметрФормулы);
			Расшифровка = Расшифровка + "
			|" + ПараметрФормулы + "=" + Значение;
			
		Исключение
			
		КонецПопытки;
		
	КонецЦикла;
	
	Расшифровка = Расшифровка + "
	|
	|";
	
	Возврат Результат;
	
КонецФункции
