
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СхемаКомпоновки = Отчеты.мРапортНСС_2_0.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
	НастройкиКомпоновки = КомпоновщикНастроек.ПолучитьНастройки();
	
	//Организация
	ПараметрОрганизация = НастройкиКомпоновки.ПараметрыДанных.Элементы.Найти("Организация");
	Если ЗначениеЗаполнено(ПараметрОрганизация.Значение) И Не ПараметрОрганизация.Значение = Организация Тогда
		Организация = ПараметрОрганизация.Значение;
		//СменаСКД();
	КонецЕсли; 
	
	//РАПОРТ
	//Блок "Котлы"
	ПолучитьДанныеРегистраНастроек("НастройкаЗначенийПоказателейКотлы");
	//проверка (убрать колонки из отчета) 	
	Для инд = 1 По 15 Цикл
		СтруктураПараметра = ПолучитьНастройкиРегистраКотлы("ЗначениеПоказателя" + инд);
		Если СтруктураПараметра.Количество() > 0 Тогда
			НастройкиКомпоновки.Структура[5].Выбор.Элементы[инд].Заголовок = СтруктураПараметра.Синоним; 			
		Иначе
			НастройкиКомпоновки.Структура[5].Выбор.Элементы[инд].Использование = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	//Блок "Турбины"
	ПолучитьДанныеРегистраНастроек("НастройкаЗначенийПоказателейТурбины");
	//проверка (убрать колонки из отчета) 	
	Для инд = 1 По 15 Цикл
		СтруктураПараметра = ПолучитьНастройкиРегистраТурбины("ЗначениеПоказателя" + инд);
		Если СтруктураПараметра.Количество() > 0 Тогда
			НастройкиКомпоновки.Структура[6].Выбор.Элементы[инд].Заголовок = СтруктураПараметра.Синоним; 			
		Иначе
			НастройкиКомпоновки.Структура[6].Выбор.Элементы[инд].Использование = Ложь;
		КонецЕсли;
	КонецЦикла;
	//РАПОРТ
	
	//программный вывод отчета
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки   = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиКомпоновки, ДанныеРасшифровки);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки, Истина);

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);  	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеРегистраНастроек(ИмяРегистра)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкаЗначенийПоказателей.ЗначениеПоказателя КАК ЗначениеПоказателя,
		|	НастройкаЗначенийПоказателей.Синоним КАК Синоним
		|ИЗ
		|	РегистрСведений."+ИмяРегистра+" КАК НастройкаЗначенийПоказателей
		|ГДЕ
		|	НастройкаЗначенийПоказателей.Организация = &Организация";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Если ИмяРегистра = "НастройкаЗначенийПоказателейКотлы" Тогда
		ДанныеРегистраНастроекКотлы.Загрузить(Запрос.Выполнить().Выгрузить());
	ИначеЕсли ИмяРегистра = "НастройкаЗначенийПоказателейТурбины" Тогда
		ДанныеРегистраНастроекТурбины.Загрузить(Запрос.Выполнить().Выгрузить());
	КонецЕсли;
	
КонецФункции

Функция ПолучитьНастройкиРегистраКотлы(ИмяПоказателя)
	
	СтруктураПараметра = Новый Структура;
	
	Для Каждого ТекСтр Из ДанныеРегистраНастроекКотлы Цикл
		Если ТекСтр.ЗначениеПоказателя = ИмяПоказателя Тогда
			СтруктураПараметра.Вставить("Синоним", ТекСтр.Синоним);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтруктураПараметра;
	
КонецФункции

Функция ПолучитьНастройкиРегистраТурбины(ИмяПоказателя)
	
	СтруктураПараметра = Новый Структура;
	
	Для Каждого ТекСтр Из ДанныеРегистраНастроекТурбины Цикл
		Если ТекСтр.ЗначениеПоказателя = ИмяПоказателя Тогда
			СтруктураПараметра.Вставить("Синоним", ТекСтр.Синоним);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтруктураПараметра;
	
КонецФункции

Процедура СменаСКД()
	
	Если Организация.Наименование = "Ижевская ТЭЦ-2" Тогда
		СхемаКомпоновкиДанных = ПолучитьМакет("Макет");
	Иначе
		СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	КонецЕсли; 	
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	УстановитьПараметрКомпоновщика("Организация", Организация);
	
КонецПроцедуры

Процедура УстановитьПараметрКомпоновщика(ИмяПараметра,ЗначениеПараметра)

	УстанавлиаемыйПараметр = Новый ПараметрКомпоновкиДанных(ИмяПараметра);
	ЗначениеУстПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(УстанавлиаемыйПараметр);
	Если Не ЗначениеУстПараметра = Неопределено Тогда
		ЗначениеУстПараметра.Значение = ЗначениеПараметра;
		ЗначениеУстПараметра.Использование = Истина;
	КонецЕсли;

КонецПроцедуры