Функция ПолучитьНовыйНомерОперации(ДокСсылка) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	МАКСИМУМ(ПоследовательностьВводаОперацийРаботыХимцеха.НомерОперации) КАК НомерОперации
	|ИЗ
	|	РегистрСведений.ПоследовательностьВводаОперацийРаботыХимцеха КАК ПоследовательностьВводаОперацийРаботыХимцеха
	|ГДЕ
	|	ПоследовательностьВводаОперацийРаботыХимцеха.Документ = &Документ");
	Запрос.УстановитьПараметр("Документ", ДокСсылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат ?(Выборка.НомерОперации = Null, 1, Выборка.НомерОперации + 1);
	КонецЕсли;
	
	Возврат 1;
	
КонецФункции

Процедура ОтменитьОперациюУдалитьЗапись(Документ, НомерОперации, ДокументыОпераций)
	
	ЗаписьОперация = РегистрыСведений.ПоследовательностьВводаОперацийРаботыХимцеха.СоздатьМенеджерЗаписи();
	ЗаписьОперация.Документ = Документ;
	ЗаписьОперация.НомерОперации = НомерОперации;
	ЗаписьОперация.Прочитать();
	
	ДокОбъект = ДокументыОпераций.Получить(Документ);
	Если ДокОбъект = Неопределено Тогда
		ДокОбъект = Документ.ПолучитьОбъект();
		ДокументыОпераций.Вставить(Документ, ДокОбъект);
	КонецЕсли;
	
	ОчиститьЗначенияРеквизитов(ДокОбъект, ЗаписьОперация.Операция);
	
	Если ЗначениеЗаполнено(ЗаписьОперация.СвязаннаяОперацияДокумент) Тогда
		ОтменитьОперациюУдалитьЗапись(ЗаписьОперация.СвязаннаяОперацияДокумент, ЗаписьОперация.СвязаннаяОперацияНомерОперации, ДокументыОпераций)
	КонецЕсли;
	
	ЗаписьОперация.Удалить();
	
КонецПроцедуры

Процедура ОтменитьОперацию(ВидРеагента, Смена = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПоследовательностьВводаОперацийРаботыХимцеха.Документ КАК Документ,
	|	ПоследовательностьВводаОперацийРаботыХимцеха.НомерОперации КАК НомерОперации,
	|	ПоследовательностьВводаОперацийРаботыХимцеха.ДокументПриемаСмены КАК ДокументПриемаСмены
	|ИЗ
	|	РегистрСведений.ПоследовательностьВводаОперацийРаботыХимцеха КАК ПоследовательностьВводаОперацийРаботыХимцеха
	|ГДЕ
	|	ПоследовательностьВводаОперацийРаботыХимцеха.Документ.ВидРеагента = &ВидРеагента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Документ УБЫВ,
	|	ПоследовательностьВводаОперацийРаботыХимцеха.НомерОперации УБЫВ
	|АВТОУПОРЯДОЧИВАНИЕ");
	Запрос.УстановитьПараметр("ВидРеагента", ВидРеагента);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Если Смена <> Неопределено Тогда
			Если Смена <> Выборка.ДокументПриемаСмены Тогда
				Возврат
			КонецЕсли;
		КонецЕсли;
		
		НачатьТранзакцию();
		
		Если ТипЗнч(Выборка.Документ) = Тип("ДокументСсылка.РасходРеагента") Тогда
			ДокОбъект = Выборка.Документ.ПолучитьОбъект();
			ДокОбъект.УстановитьПометкуУдаления(Истина);
			ЗаписьОперация = РегистрыСведений.ПоследовательностьВводаОперацийРаботыХимцеха.СоздатьМенеджерЗаписи();
			ЗаписьОперация.Документ = Выборка.Документ;
			ЗаписьОперация.НомерОперации = Выборка.НомерОперации;
			ЗаписьОперация.Удалить();
		Иначе
			
			ДокументыОпераций = Новый Соответствие;
			ОтменитьОперациюУдалитьЗапись(Выборка.Документ, Выборка.НомерОперации, ДокументыОпераций);
			
			Для Каждого Элемент Из ДокументыОпераций Цикл
				ЗаписатьУдалитьДокПослеОтменыОперации(Элемент.Значение);
			КонецЦикла;
			
		КонецЕсли;
			
		ЗафиксироватьТранзакцию();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаписатьУдалитьДокПослеОтменыОперации(ДокОбъект)
	
	Если ДокОбъект.РасходНачат
		Или ДокОбъект.РасходЗавершен
		Или ДокОбъект.ЗакачкаНачата
		Или ДокОбъект.ЗакачкаЗавершена Тогда
		ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
	Иначе
		ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
		ДокОбъект.УстановитьПометкуУдаления(Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОчиститьЗначенияРеквизитов(ДокОбъект, Операция)
	
	МестоВСтроке = 0;
	
	Если Операция = Перечисления.ОперацииОборудованияХимцеха.ВключениеЗакачки Тогда
		МестоВСтроке = 1;
	ИначеЕсли Операция = Перечисления.ОперацииОборудованияХимцеха.ВыключениеЗакачуи
		Или Операция = Перечисления.ОперацииОборудованияХимцеха.ВыключениеЗакачкиОдновременноСРасходом Тогда
		МестоВСтроке = 2;
	ИначеЕсли Операция = Перечисления.ОперацииОборудованияХимцеха.ВключениеРасхода Тогда
		МестоВСтроке = 3;
	ИначеЕсли Операция = Перечисления.ОперацииОборудованияХимцеха.ВыключениеРасхода
		Или Операция = Перечисления.ОперацииОборудованияХимцеха.ВыключениеРасходаОдновременноСЗакачкой Тогда
		МестоВСтроке = 4;
	КонецЕсли;
	
	ИменаПолей   = Документы.ЗаписьЖурналаУчетаРеагентов.ПолучитьИменаПолейТаблицыЖурнала(МестоВСтроке);
	
	
	Если МестоВСтроке = 2 Тогда      // Окончание закачки
		Если Операция = Перечисления.ОперацииОборудованияХимцеха.ВыключениеЗакачуи Тогда
			ДокОбъект.ДатаОкончанияЧистойЗакачки = Неопределено;
		КонецЕсли;
	ИначеЕсли МестоВСтроке = 4 Тогда // Окончание расхода
		Если Операция = Перечисления.ОперацииОборудованияХимцеха.ВыключениеРасхода Тогда
			ДокОбъект.ДатаОкончанияЧистогоРасхода = Неопределено;
		КонецЕсли;	
	КонецЕсли;
	
	Если МестоВСтроке = 1 Тогда
		ДокОбъект.ЗакачкаНачата = Ложь;
	ИначеЕсли МестоВСтроке = 2 Тогда
		ДокОбъект.ЗакачкаЗавершена  = Ложь;
	ИначеЕсли МестоВСтроке = 3 Тогда
		ДокОбъект.РасходНачат  = Ложь;
	ИначеЕсли МестоВСтроке = 4 Тогда
		ДокОбъект.РасходЗавершен  = Ложь;
	КонецЕсли;
	
	ДокОбъект[ИменаПолей.Дата]          = Неопределено;
	ДокОбъект[ИменаПолей.Уровень]       = Неопределено;
	ДокОбъект[ИменаПолей.Концентрация]  = Неопределено;
	ДокОбъект[ИменаПолей.Смена]         = Неопределено;
	ДокОбъект[ИменаПолей.Ответственный] = Неопределено;
	ДокОбъект[ИменаПолей.Вахта]         = Неопределено;
	ДокОбъект[ИменаПолей.Комментарий]   = Неопределено;
	
КонецПроцедуры